{"version":3,"file":"wavesurfer.js","mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACMoX;EAYF;AACJ;AACA;AACA;AACA;AACA;EACI,qBAAY1X,MAAZ,EAAoB2X,EAApB,EAAwB;IAAA;EAAE;EAC1B;AACJ;AACA;AACA;AACA;AACA;;;;;;IAvBI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,gBAAO3X,MAAP,EAAe,CAAE;;;WAcjB,gBAAO,CAAE;IACT;AACJ;AACA;AACA;AACA;AACA;;;;WACI,mBAAU,CAAE;;;;;AAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACqB4X;;;;;EAkHjB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI,oBAAY5X,MAAZ,EAAoB;IAAA;;IAAA;;IAChB;IACA;AACR;AACA;AACA;;IALwB,gEAxHJ;MACZ6X,YAAY,EAAE,IADF;MAEZC,oBAAoB,EAAE,IAFV;MAGZrM,SAAS,EAAE,CAHC;MAIZhH,UAAU,EAAE,IAJA;MAKZP,cAAc,EAAE,CALJ;MAMZS,qBAAqB,EAAE,KANX;MAOZoT,OAAO,EAAE,UAPG;MAQZC,eAAe,EAAE,IARL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IAED;AACJ;AACA;AACA;AACA;AACA;;;;WACI,0BAAiB;MACb,OAAO,KAAK0d,KAAL,CAAW3S,cAAX,CAA0BhD,IAA1B,CAA+B,IAA/B,CAAP;IACH;IAED;AACJ;AACA;AACA;AACA;;;;WACI,2BAAkB;MACd,OAAO,KAAK0B,YAAZ;IACH;IAED;AACJ;AACA;AACA;AACA;;;;WACI,yBAAgBzP,KAAhB,EAAuB;MACnB,KAAKyP,YAAL,GAAoBzP,KAAK,IAAI,CAA7B;MACA,KAAKwjB,MAAL,IAAe,KAAKA,MAAL,CAAY/T,YAAZ,CAAyBgW,cAAzB,CACX,KAAKhW,YADM,EAEX,KAAKT,EAAL,CAAQM,WAFG,CAAf;IAIH;IAED;AACJ;AACA;AACA;AACA;AACA;;;;WACI,oBAAWnR,GAAX,EAAgB;MACZ,KAAK6kB,cAAL,GAAsB7kB,GAAtB;IACH;;;;EA7vBiC4E,IAAI,CAACiF;;;;gBAAtBgL,8BAES;;;;;;;;;;;;ACd9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;UCrEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/./src/drawer.canvasentry.js","webpack://WaveSurfer/./src/drawer.js","webpack://WaveSurfer/./src/drawer.multicanvas.js","webpack://WaveSurfer/./src/mediaelement-webaudio.js","webpack://WaveSurfer/./src/mediaelement.js","webpack://WaveSurfer/./src/peakcache.js","webpack://WaveSurfer/./src/util/absMax.js","webpack://WaveSurfer/./src/util/clamp.js","webpack://WaveSurfer/./src/util/fetch.js","webpack://WaveSurfer/./src/util/frame.js","webpack://WaveSurfer/./src/util/get-id.js","webpack://WaveSurfer/./src/util/index.js","webpack://WaveSurfer/./src/util/max.js","webpack://WaveSurfer/./src/util/min.js","webpack://WaveSurfer/./src/util/observer.js","webpack://WaveSurfer/./src/util/orientation.js","webpack://WaveSurfer/./src/util/prevent-click.js","webpack://WaveSurfer/./src/util/request-animation-frame.js","webpack://WaveSurfer/./src/util/silence-mode.js","webpack://WaveSurfer/./src/util/style.js","webpack://WaveSurfer/./src/wavesurfer.js","webpack://WaveSurfer/./src/webaudio.js","webpack://WaveSurfer/./node_modules/debounce/index.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/before-startup","webpack://WaveSurfer/webpack/startup","webpack://WaveSurfer/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(self, () => {\nreturn ","/**\n * @since 3.0.0\n */\n\nimport style from './util/style';\nimport getId from './util/get-id';\n\n/**\n * The `CanvasEntry` class represents an element consisting of a wave `canvas`\n * and an (optional) progress wave `canvas`.\n *\n * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\n * render a waveform, depending on the zoom level.\n */\nexport default class CanvasEntry {\n    constructor() {\n        /**\n         * The wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.wave = null;\n        /**\n         * The wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.waveCtx = null;\n        /**\n         * The (optional) progress wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.progress = null;\n        /**\n         * The (optional) progress wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.progressCtx = null;\n        /**\n         * Start of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         */\n        this.start = 0;\n        /**\n         * End of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         */\n        this.end = 1;\n        /**\n         * Unique identifier for this entry\n         *\n         * @type {string}\n         */\n        this.id = getId(\n            typeof this.constructor.name !== 'undefined'\n                ? this.constructor.name.toLowerCase() + '_'\n                : 'canvasentry_'\n        );\n        /**\n         * Canvas 2d context attributes\n         *\n         * @type {object}\n         */\n        this.canvasContextAttributes = {};\n    }\n\n    /**\n     * Store the wave canvas element and create the 2D rendering context\n     *\n     * @param {HTMLCanvasElement} element The wave `canvas` element.\n     */\n    initWave(element) {\n        this.wave = element;\n        this.waveCtx = this.wave.getContext('2d', this.canvasContextAttributes);\n    }\n\n    /**\n     * Store the progress wave canvas element and create the 2D rendering\n     * context\n     *\n     * @param {HTMLCanvasElement} element The progress wave `canvas` element.\n     */\n    initProgress(element) {\n        this.progress = element;\n        this.progressCtx = this.progress.getContext(\n            '2d',\n            this.canvasContextAttributes\n        );\n    }\n\n    /**\n     * Update the dimensions\n     *\n     * @param {number} elementWidth Width of the entry\n     * @param {number} totalWidth Total width of the multi canvas renderer\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(elementWidth, totalWidth, width, height) {\n        // where the canvas starts and ends in the waveform, represented as a\n        // decimal between 0 and 1\n        this.start = this.wave.offsetLeft / totalWidth || 0;\n        this.end = this.start + elementWidth / totalWidth;\n\n        // set wave canvas dimensions\n        this.wave.width = width;\n        this.wave.height = height;\n        let elementSize = { width: elementWidth + 'px' };\n        style(this.wave, elementSize);\n\n        if (this.hasProgressCanvas) {\n            // set progress canvas dimensions\n            this.progress.width = width;\n            this.progress.height = height;\n            style(this.progress, elementSize);\n        }\n    }\n\n    /**\n     * Clear the wave and progress rendering contexts\n     */\n    clearWave() {\n        // wave\n        this.waveCtx.clearRect(\n            0,\n            0,\n            this.waveCtx.canvas.width,\n            this.waveCtx.canvas.height\n        );\n\n        // progress\n        if (this.hasProgressCanvas) {\n            this.progressCtx.clearRect(\n                0,\n                0,\n                this.progressCtx.canvas.width,\n                this.progressCtx.canvas.height\n            );\n        }\n    }\n\n    /**\n     * Set the fill styles for wave and progress\n     * @param {string|string[]} waveColor Fill color for the wave canvas,\n     * or an array of colors to apply as a gradient\n     * @param {?string|string[]} progressColor Fill color for the progress canvas,\n     * or an array of colors to apply as a gradient\n     */\n    setFillStyles(waveColor, progressColor) {\n        this.waveCtx.fillStyle = this.getFillStyle(this.waveCtx, waveColor);\n\n        if (this.hasProgressCanvas) {\n            this.progressCtx.fillStyle = this.getFillStyle(this.progressCtx, progressColor);\n        }\n    }\n\n    /**\n     * Utility function to handle wave color arguments\n     *\n     * When the color argument type is a string or CanvasGradient instance,\n     * it will be returned as is. Otherwise, it will be treated as an array,\n     * and a new CanvasGradient will be returned\n     *\n     * @since 6.0.0\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {string|string[]|CanvasGradient} color Either a single fill color\n     *     for the wave canvas, an existing CanvasGradient instance, or an array\n     *     of colors to apply as a gradient\n     * @returns {string|CanvasGradient} Returns a string fillstyle value, or a\n     *     canvas gradient\n     */\n    getFillStyle(ctx, color) {\n        if (typeof color == 'string' || color instanceof CanvasGradient) {\n            return color;\n        }\n\n        const waveGradient = ctx.createLinearGradient(0, 0, 0, ctx.canvas.height);\n        color.forEach((value, index) => waveGradient.addColorStop((index / color.length), value));\n\n        return waveGradient;\n    }\n\n    /**\n     * Set the canvas transforms for wave and progress\n     *\n     * @param {boolean} vertical Whether to render vertically\n     */\n    applyCanvasTransforms(vertical) {\n        if (vertical) {\n            // Reflect the waveform across the line y = -x\n            this.waveCtx.setTransform(0, 1, 1, 0, 0, 0);\n\n            if (this.hasProgressCanvas) {\n                this.progressCtx.setTransform(0, 1, 1, 0, 0, 0);\n            }\n        }\n    }\n\n    /**\n     * Draw a rectangle for wave and progress\n     *\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRects(x, y, width, height, radius) {\n        this.fillRectToContext(this.waveCtx, x, y, width, height, radius);\n\n        if (this.hasProgressCanvas) {\n            this.fillRectToContext(\n                this.progressCtx,\n                x,\n                y,\n                width,\n                height,\n                radius\n            );\n        }\n    }\n\n    /**\n     * Draw the actual rectangle on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRectToContext(ctx, x, y, width, height, radius) {\n        if (!ctx) {\n            return;\n        }\n\n        if (radius) {\n            this.drawRoundedRect(ctx, x, y, width, height, radius);\n        } else {\n            ctx.fillRect(x, y, width, height);\n        }\n    }\n\n    /**\n     * Draw a rounded rectangle on Canvas\n     *\n     * @param {CanvasRenderingContext2D} ctx Canvas context\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     *\n     * @return {void}\n     * @example drawRoundedRect(ctx, 50, 50, 5, 10, 3)\n     */\n    drawRoundedRect(ctx, x, y, width, height, radius) {\n        if (height === 0) {\n            return;\n        }\n        // peaks are float values from -1 to 1. Use absolute height values in\n        // order to correctly calculate rounded rectangle coordinates\n        if (height < 0) {\n            height *= -1;\n            y -= height;\n        }\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n        ctx.lineTo(x + width, y + height - radius);\n        ctx.quadraticCurveTo(\n            x + width,\n            y + height,\n            x + width - radius,\n            y + height\n        );\n        ctx.lineTo(x + radius, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Render the actual wave and progress lines\n     *\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLines(peaks, absmax, halfH, offsetY, start, end) {\n        this.drawLineToContext(\n            this.waveCtx,\n            peaks,\n            absmax,\n            halfH,\n            offsetY,\n            start,\n            end\n        );\n\n        if (this.hasProgressCanvas) {\n            this.drawLineToContext(\n                this.progressCtx,\n                peaks,\n                absmax,\n                halfH,\n                offsetY,\n                start,\n                end\n            );\n        }\n    }\n\n    /**\n     * Render the actual waveform line on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\n        if (!ctx) {\n            return;\n        }\n\n        const length = peaks.length / 2;\n        const first = Math.round(length * this.start);\n\n        // use one more peak value to make sure we join peaks at ends -- unless,\n        // of course, this is the last canvas\n        const last = Math.round(length * this.end) + 1;\n\n        const canvasStart = first;\n        const canvasEnd = last;\n        const scale = this.wave.width / (canvasEnd - canvasStart - 1);\n\n        // optimization\n        const halfOffset = halfH + offsetY;\n        const absmaxHalf = absmax / halfH;\n\n        ctx.beginPath();\n        ctx.moveTo((canvasStart - first) * scale, halfOffset);\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf)\n        );\n\n        let i, peak, h;\n        for (i = canvasStart; i < canvasEnd; i++) {\n            peak = peaks[2 * i] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        // draw the bottom edge going backwards, to make a single\n        // closed hull to fill\n        let j = canvasEnd - 1;\n        for (j; j >= canvasStart; j--) {\n            peak = peaks[2 * j + 1] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset -\n            Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf)\n        );\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Destroys this entry\n     */\n    destroy() {\n        this.waveCtx = null;\n        this.wave = null;\n\n        this.progressCtx = null;\n        this.progress = null;\n    }\n\n    /**\n     * Return image data of the wave `canvas` element\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise` that\n     * resolves with a `Blob` instance.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|Promise} When using the default `'dataURL'` `type` this\n     * returns a data URL. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with a `Blob` instance.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return new Promise(resolve => {\n                this.wave.toBlob(resolve, format, quality);\n            });\n        } else if (type === 'dataURL') {\n            return this.wave.toDataURL(format, quality);\n        }\n    }\n}\n","import * as util from './util';\n\n/**\n * Parent class for renderers\n *\n * @extends {Observer}\n */\nexport default class Drawer extends util.Observer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super();\n\n        this.container = util.withOrientation(container, params.vertical);\n        /**\n         * @type {WavesurferParams}\n         */\n        this.params = params;\n        /**\n         * The width of the renderer\n         * @type {number}\n         */\n        this.width = 0;\n        /**\n         * The height of the renderer\n         * @type {number}\n         */\n        this.height = params.height * this.params.pixelRatio;\n\n        this.lastPos = 0;\n        /**\n         * The `<wave>` element which is added to the container\n         * @type {HTMLElement}\n         */\n        this.wrapper = null;\n    }\n\n    /**\n     * Alias of `util.style`\n     *\n     * @param {HTMLElement} el The element that the styles will be applied to\n     * @param {Object} styles The map of propName: attribute, both are used as-is\n     * @return {HTMLElement} el\n     */\n    style(el, styles) {\n        return util.style(el, styles);\n    }\n\n    /**\n     * Create the wrapper `<wave>` element, style it and set up the events for\n     * interaction\n     */\n    createWrapper() {\n        this.wrapper = util.withOrientation(\n            this.container.appendChild(document.createElement('wave')),\n            this.params.vertical\n        );\n\n        this.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: this.params.height + 'px'\n        });\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: '100%',\n                cursor: this.params.hideCursor ? 'none' : 'auto',\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                overflowY: 'hidden'\n            });\n        }\n\n        this.setupWrapperEvents();\n    }\n\n    /**\n     * Handle click event\n     *\n     * @param {Event} e Click event\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n     * @return {number} Playback position from 0 to 1\n     */\n    handleEvent(e, noPrevent) {\n        !noPrevent && e.preventDefault();\n\n        const clientX = util.withOrientation(\n            e.targetTouches ? e.targetTouches[0] : e,\n            this.params.vertical\n        ).clientX;\n        const bbox = this.wrapper.getBoundingClientRect();\n\n        const nominalWidth = this.width;\n        const parentWidth = this.getWidth();\n        const progressPixels = this.getProgressPixels(bbox, clientX);\n\n        let progress;\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\n            progress = progressPixels *\n                (this.params.pixelRatio / nominalWidth) || 0;\n        } else {\n            progress = (progressPixels + this.wrapper.scrollLeft) /\n                this.wrapper.scrollWidth || 0;\n        }\n\n        return util.clamp(progress, 0, 1);\n    }\n\n    getProgressPixels(wrapperBbox, clientX) {\n        if (this.params.rtl) {\n            return wrapperBbox.right - clientX;\n        } else {\n            return clientX - wrapperBbox.left;\n        }\n    }\n\n    setupWrapperEvents() {\n        this.wrapper.addEventListener('click', e => {\n            const orientedEvent = util.withOrientation(e, this.params.vertical);\n            const scrollbarHeight = this.wrapper.offsetHeight -\n                  this.wrapper.clientHeight;\n\n            if (scrollbarHeight !== 0) {\n                // scrollbar is visible.  Check if click was on it\n                const bbox = this.wrapper.getBoundingClientRect();\n                if (orientedEvent.clientY >= bbox.bottom - scrollbarHeight) {\n                    // ignore mousedown as it was on the scrollbar\n                    return;\n                }\n            }\n\n            if (this.params.interact) {\n                this.fireEvent('click', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('dblclick', e => {\n            if (this.params.interact) {\n                this.fireEvent('dblclick', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('scroll', e =>\n            this.fireEvent('scroll', e)\n        );\n    }\n\n    /**\n     * Draw peaks on the canvas\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} length The width of the area that should be drawn\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawPeaks(peaks, length, start, end) {\n        if (!this.setWidth(length)) {\n            this.clearWave();\n        }\n\n        this.params.barWidth\n            ? this.drawBars(peaks, 0, start, end)\n            : this.drawWave(peaks, 0, start, end);\n    }\n\n    /**\n     * Scroll to the beginning\n     */\n    resetScroll() {\n        if (this.wrapper !== null) {\n            this.wrapper.scrollLeft = 0;\n        }\n    }\n\n    /**\n     * Recenter the view-port at a certain percent of the waveform\n     *\n     * @param {number} percent Value from 0 to 1 on the waveform\n     */\n    recenter(percent) {\n        const position = this.wrapper.scrollWidth * percent;\n        this.recenterOnPosition(position, true);\n    }\n\n    /**\n     * Recenter the view-port on a position, either scroll there immediately or\n     * in steps of 5 pixels\n     *\n     * @param {number} position X-offset in pixels\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\n     */\n    recenterOnPosition(position, immediate) {\n        const scrollLeft = this.wrapper.scrollLeft;\n        const half = ~~(this.wrapper.clientWidth / 2);\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n        let target = position - half;\n        let offset = target - scrollLeft;\n\n        if (maxScroll == 0) {\n            // no need to continue if scrollbar is not there\n            return;\n        }\n\n        // if the cursor is currently visible...\n        if (!immediate && -half <= offset && offset < half) {\n            // set rate at which waveform is centered\n            let rate = this.params.autoCenterRate;\n\n            // make rate depend on width of view and length of waveform\n            rate /= half;\n            rate *= maxScroll;\n\n            offset = Math.max(-rate, Math.min(rate, offset));\n            target = scrollLeft + offset;\n        }\n\n        // limit target to valid range (0 to maxScroll)\n        target = Math.max(0, Math.min(maxScroll, target));\n        // no use attempting to scroll if we're not moving\n        if (target != scrollLeft) {\n            this.wrapper.scrollLeft = target;\n        }\n    }\n\n    /**\n     * Get the current scroll position in pixels\n     *\n     * @return {number} Horizontal scroll position in pixels\n     */\n    getScrollX() {\n        let x = 0;\n        if (this.wrapper) {\n            const pixelRatio = this.params.pixelRatio;\n            x = Math.round(this.wrapper.scrollLeft * pixelRatio);\n\n            // In cases of elastic scroll (safari with mouse wheel) you can\n            // scroll beyond the limits of the container\n            // Calculate and floor the scrollable extent to make sure an out\n            // of bounds value is not returned\n            // Ticket #1312\n            if (this.params.scrollParent) {\n                const maxScroll = ~~(\n                    this.wrapper.scrollWidth * pixelRatio -\n                    this.getWidth()\n                );\n                x = Math.min(maxScroll, Math.max(0, x));\n            }\n        }\n        return x;\n    }\n\n    /**\n     * Get the width of the container\n     *\n     * @return {number} The width of the container\n     */\n    getWidth() {\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\n    }\n\n    /**\n     * Set the width of the container\n     *\n     * @param {number} width The new width of the container\n     * @return {boolean} Whether the width of the container was updated or not\n     */\n    setWidth(width) {\n        if (this.width == width) {\n            return false;\n        }\n\n        this.width = width;\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: ''\n            });\n        } else {\n            const newWidth = ~~(this.width / this.params.pixelRatio) + 'px';\n            this.style(this.wrapper, {\n                width: newWidth\n            });\n        }\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Set the height of the container\n     *\n     * @param {number} height The new height of the container.\n     * @return {boolean} Whether the height of the container was updated or not\n     */\n    setHeight(height) {\n        if (height == this.height) {\n            return false;\n        }\n        this.height = height;\n\n        this.style(this.wrapper, {\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\n        });\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Called by wavesurfer when progress should be rendered\n     *\n     * @param {number} progress From 0 to 1\n     */\n    progress(progress) {\n        const minPxDelta = 1 / this.params.pixelRatio;\n        const pos = Math.round(progress * this.width) * minPxDelta;\n\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n            this.lastPos = pos;\n\n            if (this.params.scrollParent && this.params.autoCenter) {\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\n                this.recenterOnPosition(\n                    newPos,\n                    this.params.autoCenterImmediately\n                );\n            }\n\n            this.updateProgress(pos);\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        this.unAll();\n        if (this.wrapper) {\n            if (this.wrapper.parentNode == this.container.domElement) {\n                this.container.removeChild(this.wrapper.domElement);\n            }\n            this.wrapper = null;\n        }\n    }\n\n    /* Renderer-specific methods */\n\n    /**\n     * Called after cursor related params have changed.\n     *\n     * @abstract\n     */\n    updateCursor() {}\n\n    /**\n     * Called when the size of the container changes so the renderer can adjust\n     *\n     * @abstract\n     */\n    updateSize() {}\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {}\n\n    /**\n     * Draw a waveform\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {}\n\n    /**\n     * Clear the waveform\n     *\n     * @abstract\n     */\n    clearWave() {}\n\n    /**\n     * Render the new progress\n     *\n     * @abstract\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {}\n}\n","import Drawer from './drawer';\nimport * as util from './util';\nimport CanvasEntry from './drawer.canvasentry';\n\n/**\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole\n * builtin renderer.\n *\n * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\n * on the zoom level.\n */\nexport default class MultiCanvas extends Drawer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super(container, params);\n\n        /**\n         * @type {number}\n         */\n        this.maxCanvasWidth = params.maxCanvasWidth;\n\n        /**\n         * @type {number}\n         */\n        this.maxCanvasElementWidth = Math.round(\n            params.maxCanvasWidth / params.pixelRatio\n        );\n\n        /**\n         * Whether or not the progress wave is rendered. If the `waveColor`\n         * and `progressColor` are the same color it is not.\n         *\n         * @type {boolean}\n         */\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\n\n        /**\n         * @type {number}\n         */\n        this.halfPixel = 0.5 / params.pixelRatio;\n\n        /**\n         * List of `CanvasEntry` instances.\n         *\n         * @type {Array}\n         */\n        this.canvases = [];\n\n        /**\n         * @type {HTMLElement}\n         */\n        this.progressWave = null;\n\n        /**\n         * Class used to generate entries.\n         *\n         * @type {function}\n         */\n        this.EntryClass = CanvasEntry;\n\n        /**\n         * Canvas 2d context attributes.\n         *\n         * @type {object}\n         */\n        this.canvasContextAttributes = params.drawingContextAttributes;\n\n        /**\n         * Overlap added between entries to prevent vertical white stripes\n         * between `canvas` elements.\n         *\n         * @type {number}\n         */\n        this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\n\n        /**\n         * The radius of the wave bars. Makes bars rounded\n         *\n         * @type {number}\n         */\n        this.barRadius = params.barRadius || 0;\n\n        /**\n         * Whether to render the waveform vertically. Defaults to false.\n         *\n         * @type {boolean}\n         */\n        this.vertical = params.vertical;\n    }\n\n    /**\n     * Initialize the drawer\n     */\n    init() {\n        this.createWrapper();\n        this.createElements();\n    }\n\n    /**\n     * Create the canvas elements and style them\n     *\n     */\n    createElements() {\n        this.progressWave = util.withOrientation(\n            this.wrapper.appendChild(document.createElement('wave')),\n            this.params.vertical\n        );\n        this.style(this.progressWave, {\n            position: 'absolute',\n            zIndex: 3,\n            left: 0,\n            top: 0,\n            bottom: 0,\n            overflow: 'hidden',\n            width: '0',\n            display: 'none',\n            boxSizing: 'border-box',\n            borderRightStyle: 'solid',\n            pointerEvents: 'none'\n        });\n\n        this.addCanvas();\n        this.updateCursor();\n    }\n\n    /**\n     * Update cursor style\n     */\n    updateCursor() {\n        this.style(this.progressWave, {\n            borderRightWidth: this.params.cursorWidth + 'px',\n            borderRightColor: this.params.cursorColor\n        });\n    }\n\n    /**\n     * Adjust to the updated size by adding or removing canvases\n     */\n    updateSize() {\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n        const requiredCanvases = Math.ceil(\n            totalWidth / (this.maxCanvasElementWidth + this.overlap)\n        );\n\n        // add required canvases\n        while (this.canvases.length < requiredCanvases) {\n            this.addCanvas();\n        }\n\n        // remove older existing canvases, if any\n        while (this.canvases.length > requiredCanvases) {\n            this.removeCanvas();\n        }\n\n        let canvasWidth = this.maxCanvasWidth + this.overlap;\n        const lastCanvas = this.canvases.length - 1;\n        this.canvases.forEach((entry, i) => {\n            if (i == lastCanvas) {\n                canvasWidth = this.width - this.maxCanvasWidth * lastCanvas;\n            }\n            this.updateDimensions(entry, canvasWidth, this.height);\n\n            entry.clearWave();\n        });\n    }\n\n    /**\n     * Add a canvas to the canvas list\n     *\n     */\n    addCanvas() {\n        const entry = new this.EntryClass();\n        entry.canvasContextAttributes = this.canvasContextAttributes;\n        entry.hasProgressCanvas = this.hasProgressCanvas;\n        entry.halfPixel = this.halfPixel;\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n        // wave\n        let wave = util.withOrientation(\n            this.wrapper.appendChild(document.createElement('canvas')),\n            this.params.vertical\n        );\n        this.style(wave, {\n            position: 'absolute',\n            zIndex: 2,\n            left: leftOffset + 'px',\n            top: 0,\n            bottom: 0,\n            height: '100%',\n            pointerEvents: 'none'\n        });\n        entry.initWave(wave);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            let progress = util.withOrientation(\n                this.progressWave.appendChild(document.createElement('canvas')),\n                this.params.vertical\n            );\n            this.style(progress, {\n                position: 'absolute',\n                left: leftOffset + 'px',\n                top: 0,\n                bottom: 0,\n                height: '100%'\n            });\n            entry.initProgress(progress);\n        }\n\n        this.canvases.push(entry);\n    }\n\n    /**\n     * Pop single canvas from the list\n     *\n     */\n    removeCanvas() {\n        let lastEntry = this.canvases[this.canvases.length - 1];\n\n        // wave\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave.domElement);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress.domElement);\n        }\n\n        // cleanup\n        if (lastEntry) {\n            lastEntry.destroy();\n            lastEntry = null;\n        }\n\n        this.canvases.pop();\n    }\n\n    /**\n     * Update the dimensions of a canvas element\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(entry, width, height) {\n        const elementWidth = Math.round(width / this.params.pixelRatio);\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n        // update canvas dimensions\n        entry.updateDimensions(elementWidth, totalWidth, width, height);\n\n        // style element\n        this.style(this.progressWave, { display: 'block' });\n    }\n\n    /**\n     * Clear the whole multi-canvas\n     */\n    clearWave() {\n        util.frame(() => {\n            this.canvases.forEach(entry => entry.clearWave());\n        })();\n    }\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0. Must be an integer.\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawBars(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex: ch }) => {\n                // if drawBars was called within ws.empty we don't pass a start and\n                // don't want anything to happen\n                if (start === undefined) {\n                    return;\n                }\n                // Skip every other value if there are negatives.\n                const peakIndexScale = hasMinVals ? 2 : 1;\n                const length = peaks.length / peakIndexScale;\n                const bar = this.params.barWidth * this.params.pixelRatio;\n                const gap =\n                    this.params.barGap === null\n                        ? Math.max(this.params.pixelRatio, ~~(bar / 2))\n                        : Math.max(\n                            this.params.pixelRatio,\n                            this.params.barGap * this.params.pixelRatio\n                        );\n                const step = bar + gap;\n\n                const scale = length / this.width;\n                const first = start;\n                const last = end;\n                let peakIndex = first;\n                for (peakIndex; peakIndex < last; peakIndex += step) {\n\n                    // search for the highest peak in the range this bar falls into\n                    let peak = 0;\n                    let peakIndexRange = Math.floor(peakIndex * scale) * peakIndexScale; // start index\n                    const peakIndexEnd = Math.floor((peakIndex + step) * scale) * peakIndexScale;\n                    do { // do..while makes sure at least one peak is always evaluated\n                        const newPeak = Math.abs(peaks[peakIndexRange]); // for arrays starting with negative values\n                        if (newPeak > peak) {\n                            peak = newPeak; // higher\n                        }\n                        peakIndexRange += peakIndexScale; // skip every other value for negatives\n                    } while (peakIndexRange < peakIndexEnd);\n\n                    // calculate the height of this bar according to the highest peak found\n                    let h = Math.round((peak / absmax) * halfH);\n\n                    // raise the bar height to the specified minimum height\n                    // Math.max is used to replace any value smaller than barMinHeight (not just 0) with barMinHeight\n                    if (this.params.barMinHeight) {\n                        h = Math.max(h, this.params.barMinHeight);\n                    }\n\n                    this.fillRect(\n                        peakIndex + this.halfPixel,\n                        halfH - h + offsetY,\n                        bar + this.halfPixel,\n                        h * 2,\n                        this.barRadius,\n                        ch\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Draw a waveform\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered (If this isn't set only a flat line is rendered)\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawWave(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex }) => {\n                if (!hasMinVals) {\n                    const reflectedPeaks = [];\n                    const len = peaks.length;\n                    let i = 0;\n                    for (i; i < len; i++) {\n                        reflectedPeaks[2 * i] = peaks[i];\n                        reflectedPeaks[2 * i + 1] = -peaks[i];\n                    }\n                    peaks = reflectedPeaks;\n                }\n\n                // if drawWave was called within ws.empty we don't pass a start and\n                // end and simply want a flat line\n                if (start !== undefined) {\n                    this.drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex);\n                }\n\n                // always draw a median line\n                this.fillRect(\n                    0,\n                    halfH + offsetY - this.halfPixel,\n                    this.width,\n                    this.halfPixel,\n                    this.barRadius,\n                    channelIndex\n                );\n            }\n        );\n    }\n\n    /**\n     * Tell the canvas entries to render their portion of the waveform\n     *\n     * @param {number[]} peaks Peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     * @param {channelIndex} channelIndex The channel index of the line drawn\n     */\n    drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex) {\n        const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\n        this.canvases.forEach((entry, i) => {\n            this.setFillStyles(entry, waveColor, progressColor);\n            this.applyCanvasTransforms(entry, this.params.vertical);\n            entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\n        });\n    }\n\n    /**\n     * Draw a rectangle on the multi-canvas\n     *\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     * @param {channelIndex} channelIndex The channel index of the bar drawn\n     */\n    fillRect(x, y, width, height, radius, channelIndex) {\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\n        const endCanvas = Math.min(\n            Math.ceil((x + width) / this.maxCanvasWidth) + 1,\n            this.canvases.length\n        );\n        let i = startCanvas;\n        for (i; i < endCanvas; i++) {\n            const entry = this.canvases[i];\n            const leftOffset = i * this.maxCanvasWidth;\n\n            const intersection = {\n                x1: Math.max(x, i * this.maxCanvasWidth),\n                y1: y,\n                x2: Math.min(\n                    x + width,\n                    i * this.maxCanvasWidth + entry.wave.width\n                ),\n                y2: y + height\n            };\n\n            if (intersection.x1 < intersection.x2) {\n                const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\n                this.setFillStyles(entry, waveColor, progressColor);\n                this.applyCanvasTransforms(entry, this.params.vertical);\n\n                entry.fillRects(\n                    intersection.x1 - leftOffset,\n                    intersection.y1,\n                    intersection.x2 - intersection.x1,\n                    intersection.y2 - intersection.y1,\n                    radius\n                );\n            }\n        }\n    }\n\n    /**\n     * Returns whether to hide the channel from being drawn based on params.\n     *\n     * @param {number} channelIndex The index of the current channel.\n     * @returns {bool} True to hide the channel, false to draw.\n     */\n    hideChannel(channelIndex) {\n        return this.params.splitChannels && this.params.splitChannelsOptions.filterChannels.includes(channelIndex);\n    }\n\n    /**\n     * Performs preparation tasks and calculations which are shared by `drawBars`\n     * and `drawWave`\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\n     * split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered. If this isn't set only a flat line is rendered\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @param {function} fn The render function to call, e.g. `drawWave`\n     * @param {number} drawIndex The index of the current channel after filtering.\n     * @param {number?} normalizedMax Maximum modulation value across channels for use with relativeNormalization. Ignored when undefined\n     * @returns {void}\n     */\n    prepareDraw(peaks, channelIndex, start, end, fn, drawIndex, normalizedMax) {\n        return util.frame(() => {\n            // Split channels and call this function with the channelIndex set\n            if (peaks[0] instanceof Array) {\n                const channels = peaks;\n\n                if (this.params.splitChannels) {\n                    const filteredChannels = channels.filter((c, i) => !this.hideChannel(i));\n                    if (!this.params.splitChannelsOptions.overlay) {\n                        this.setHeight(\n                            Math.max(filteredChannels.length, 1) *\n                                this.params.height *\n                                this.params.pixelRatio\n                        );\n                    }\n\n                    let overallAbsMax;\n                    if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.relativeNormalization) {\n                        // calculate maximum peak across channels to use for normalization\n                        overallAbsMax = util.max(channels.map((channelPeaks => util.absMax(channelPeaks))));\n                    }\n\n\n                    return channels.forEach((channelPeaks, i) =>\n                        this.prepareDraw(channelPeaks, i, start, end, fn, filteredChannels.indexOf(channelPeaks), overallAbsMax)\n                    );\n                }\n                peaks = channels[0];\n            }\n\n            // Return and do not draw channel peaks if hidden.\n            if (this.hideChannel(channelIndex)) {\n                return;\n            }\n\n            // calculate maximum modulation value, either from the barHeight\n            // parameter or if normalize=true from the largest value in the peak\n            // set\n            let absmax = 1 / this.params.barHeight;\n            if (this.params.normalize) {\n                absmax = normalizedMax === undefined ? util.absMax(peaks) : normalizedMax;\n            }\n\n            // Bar wave draws the bottom only as a reflection of the top,\n            // so we don't need negative values\n            const hasMinVals = [].some.call(peaks, val => val < 0);\n            const height = this.params.height * this.params.pixelRatio;\n            const halfH = height / 2;\n\n            let offsetY = height * drawIndex || 0;\n\n            // Override offsetY if overlay is true\n            if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.overlay) {\n                offsetY = 0;\n            }\n\n            return fn({\n                absmax: absmax,\n                hasMinVals: hasMinVals,\n                height: height,\n                offsetY: offsetY,\n                halfH: halfH,\n                peaks: peaks,\n                channelIndex: channelIndex\n            });\n        })();\n    }\n\n    /**\n     * Set the fill styles for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {string} waveColor Wave color to draw this entry\n     * @param {string} progressColor Progress color to draw this entry\n     */\n    setFillStyles(entry, waveColor = this.params.waveColor, progressColor = this.params.progressColor) {\n        entry.setFillStyles(waveColor, progressColor);\n    }\n\n    /**\n     * Set the canvas transforms for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {boolean} vertical Whether to render the waveform vertically\n     */\n    applyCanvasTransforms(entry, vertical = false) {\n        entry.applyCanvasTransforms(vertical);\n    }\n\n    /**\n     * Return image data of the multi-canvas\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise`.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|string[]|Promise} When using the default `'dataURL'`\n     * `type` this returns a single data URL or an array of data URLs,\n     * one for each canvas. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with an array of `Blob` instances, one for each\n     * canvas.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return Promise.all(\n                this.canvases.map(entry => {\n                    return entry.getImage(format, quality, type);\n                })\n            );\n        } else if (type === 'dataURL') {\n            let images = this.canvases.map(entry =>\n                entry.getImage(format, quality, type)\n            );\n            return images.length > 1 ? images : images[0];\n        }\n    }\n\n    /**\n     * Render the new progress\n     *\n     * @param {number} position X-offset of progress position in pixels\n     */\n    updateProgress(position) {\n        this.style(this.progressWave, { width: position + 'px' });\n    }\n}\n","import MediaElement from './mediaelement';\n\n/**\n * MediaElementWebAudio backend: load audio via an HTML5 audio tag, but playback with the WebAudio API.\n * The advantage here is that the html5 <audio> tag can perform range requests on the server and not\n * buffer the entire file in one request, and you still get the filtering and scripting functionality\n * of the webaudio API.\n * Note that in order to use range requests and prevent buffering, you must provide peak data.\n *\n * @since 3.2.0\n */\nexport default class MediaElementWebAudio extends MediaElement {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n        /** @private */\n        this.sourceMediaElement = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n    }\n    /**\n     * Private method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @private\n     */\n    _load(media, peaks, preload) {\n        super._load(media, peaks, preload);\n        this.createMediaElementSource(media);\n    }\n\n    /**\n     * Create MediaElementSource node\n     *\n     * @since 3.2.0\n     * @param {HTMLMediaElement} mediaElement HTML5 Audio to load\n     */\n    createMediaElementSource(mediaElement) {\n        this.sourceMediaElement = this.ac.createMediaElementSource(\n            mediaElement\n        );\n        this.sourceMediaElement.connect(this.analyser);\n    }\n\n    play(start, end) {\n        this.resumeAudioContext();\n        return super.play(start, end);\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        super.destroy();\n\n        this.destroyWebAudio();\n    }\n}\n","import WebAudio from './webaudio';\nimport * as util from './util';\n\n/**\n * MediaElement backend\n */\nexport default class MediaElement extends WebAudio {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n\n        /**\n         * Initially a dummy media element to catch errors. Once `_load` is\n         * called, this will contain the actual `HTMLMediaElement`.\n         * @private\n         */\n        this.media = {\n            currentTime: 0,\n            duration: 0,\n            paused: true,\n            playbackRate: 1,\n            play() {},\n            pause() {},\n            volume: 0\n        };\n\n        /** @private */\n        this.mediaType = params.mediaType.toLowerCase();\n        /** @private */\n        this.elementPosition = params.elementPosition;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.volume = 1;\n        /** @private */\n        this.isMuted = false;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.onPlayEnd = null;\n        /** @private */\n        this.mediaListeners = {};\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n    }\n\n    /**\n     * Attach event listeners to media element.\n     */\n    _setupMediaListeners() {\n        this.mediaListeners.error = () => {\n            this.fireEvent('error', 'Error loading media element');\n        };\n        this.mediaListeners.canplay = () => {\n            this.fireEvent('canplay');\n        };\n        this.mediaListeners.ended = () => {\n            this.fireEvent('finish');\n        };\n        // listen to and relay play, pause and seeked events to enable\n        // playback control from the external media element\n        this.mediaListeners.play = () => {\n            this.fireEvent('play');\n        };\n        this.mediaListeners.pause = () => {\n            this.fireEvent('pause');\n        };\n        this.mediaListeners.seeked = event => {\n            this.fireEvent('seek');\n        };\n        this.mediaListeners.volumechange = event => {\n            this.isMuted = this.media.muted;\n            if (this.isMuted) {\n                this.volume = 0;\n            } else {\n                this.volume = this.media.volume;\n            }\n            this.fireEvent('volume');\n        };\n\n        // reset event listeners\n        Object.keys(this.mediaListeners).forEach(id => {\n            this.media.removeEventListener(id, this.mediaListeners[id]);\n            this.media.addEventListener(id, this.mediaListeners[id]);\n        });\n    }\n\n    /**\n     * Create a timer to provide a more precise `audioprocess` event.\n     */\n    createTimer() {\n        const onAudioProcess = () => {\n            if (this.isPaused()) {\n                return;\n            }\n            this.fireEvent('audioprocess', this.getCurrentTime());\n\n            // Call again in the next frame\n            util.frame(onAudioProcess)();\n        };\n\n        this.on('play', onAudioProcess);\n\n        // Update the progress one more time to prevent it from being stuck in\n        // case of lower framerates\n        this.on('pause', () => {\n            this.fireEvent('audioprocess', this.getCurrentTime());\n        });\n    }\n\n    /**\n     * Create media element with url as its source,\n     * and append to container element.\n     *\n     * @param {string} url Path to media file\n     * @param {HTMLElement} container HTML element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `url` argument is not a valid media\n     * element.\n     */\n    load(url, container, peaks, preload) {\n        const media = document.createElement(this.mediaType);\n        media.controls = this.params.mediaControls;\n        media.autoplay = this.params.autoplay || false;\n        media.preload = preload == null ? 'auto' : preload;\n        media.src = url;\n        media.style.width = '100%';\n\n        const prevMedia = container.querySelector(this.mediaType);\n        if (prevMedia) {\n            container.removeChild(prevMedia);\n        }\n        container.appendChild(media);\n\n        this._load(media, peaks, preload);\n    }\n\n    /**\n     * Load existing media element.\n     *\n     * @param {HTMLMediaElement} elt HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     */\n    loadElt(elt, peaks) {\n        elt.controls = this.params.mediaControls;\n        elt.autoplay = this.params.autoplay || false;\n\n        this._load(elt, peaks, elt.preload);\n    }\n\n    /**\n     * Method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `media` argument is not a valid media\n     * element.\n     * @private\n     */\n    _load(media, peaks, preload) {\n        // verify media element is valid\n        if (\n            !(media instanceof HTMLMediaElement) ||\n            typeof media.addEventListener === 'undefined'\n        ) {\n            throw new Error('media parameter is not a valid media element');\n        }\n\n        // load must be called manually on iOS, otherwise peaks won't draw\n        // until a user interaction triggers load --> 'ready' event\n        //\n        // note that we avoid calling media.load here when given peaks and preload == 'none'\n        // as this almost always triggers some browser fetch of the media.\n        if (typeof media.load == 'function' && !(peaks && preload == 'none')) {\n            // Resets the media element and restarts the media resource. Any\n            // pending events are discarded. How much media data is fetched is\n            // still affected by the preload attribute.\n            media.load();\n        }\n\n        this.media = media;\n        this._setupMediaListeners();\n        this.peaks = peaks;\n        this.onPlayEnd = null;\n        this.buffer = null;\n        this.isMuted = media.muted;\n        this.setPlaybackRate(this.playbackRate);\n        this.setVolume(this.volume);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Media paused or not\n     */\n    isPaused() {\n        return !this.media || this.media.paused;\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        let duration = (this.buffer || this.media).duration;\n        if (duration >= Infinity) {\n            // streaming audio\n            duration = this.media.seekable.end(0);\n        }\n        return duration;\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} Current time\n     */\n    getCurrentTime() {\n        return this.media && this.media.currentTime;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Current position\n     */\n    getPlayedPercents() {\n        return this.getCurrentTime() / this.getDuration() || 0;\n    }\n\n    /**\n     * Get the audio source playback rate.\n     *\n     * @return {number} Playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate || this.media.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value Playback rate\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.media.playbackRate = this.playbackRate;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     */\n    seekTo(start) {\n        if (start != null && !isNaN(start)) {\n            this.media.currentTime = start;\n        }\n        this.clearPlayEnd();\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop, relative to the beginning of a clip.\n     * @emits MediaElement#play\n     * @return {Promise} Result\n     */\n    play(start, end) {\n        this.seekTo(start);\n        const promise = this.media.play();\n        end && this.setPlayEnd(end);\n\n        return promise;\n    }\n\n    /**\n     * Pauses the loaded audio.\n     *\n     * @emits MediaElement#pause\n     * @return {Promise} Result\n     */\n    pause() {\n        let promise;\n\n        if (this.media) {\n            promise = this.media.pause();\n        }\n        this.clearPlayEnd();\n\n        return promise;\n    }\n\n    /**\n     * Set the play end\n     *\n     * @param {number} end Where to end\n     */\n    setPlayEnd(end) {\n        this.clearPlayEnd();\n\n        this._onPlayEnd = time => {\n            if (time >= end) {\n                this.pause();\n                this.seekTo(end);\n            }\n        };\n        this.on('audioprocess', this._onPlayEnd);\n    }\n\n    /** @private */\n    clearPlayEnd() {\n        if (this._onPlayEnd) {\n            this.un('audioprocess', this._onPlayEnd);\n            this._onPlayEnd = null;\n        }\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into\n     * <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\n     * arrays of peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.buffer) {\n            return super.getPeaks(length, first, last);\n        }\n        return this.peaks || [];\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            if (!this.media.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            return this.media.setSinkId(deviceId);\n        }\n\n        return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.volume;\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.volume = value;\n        // no need to change when it's already at that volume\n        if (this.media.volume !== this.volume) {\n            this.media.volume = this.volume;\n        }\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @since 4.0.0\n     * @param {boolean} muted Specify `true` to mute audio.\n     */\n    setMute(muted) {\n        // This causes a volume change to be emitted too through the\n        // volumechange event listener.\n        this.isMuted = this.media.muted = muted;\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        this.pause();\n        this.unAll();\n        this.destroyed = true;\n\n        // cleanup media event listeners\n        Object.keys(this.mediaListeners).forEach(id => {\n            if (this.media) {\n                this.media.removeEventListener(id, this.mediaListeners[id]);\n            }\n        });\n\n        if (\n            this.params.removeMediaElementOnDestroy &&\n            this.media &&\n            this.media.parentNode\n        ) {\n            this.media.parentNode.removeChild(this.media);\n        }\n\n        this.media = null;\n    }\n}\n","/**\n * Caches the decoded peaks data to improve rendering speed for large audio\n *\n * Is used if the option parameter `partialRender` is set to `true`\n */\nexport default class PeakCache {\n    /**\n     * Instantiate cache\n     */\n    constructor() {\n        this.clearPeakCache();\n    }\n\n    /**\n     * Empty the cache\n     */\n    clearPeakCache() {\n        /**\n         * Flat array with entries that are always in pairs to mark the\n         * beginning and end of each subrange.  This is a convenience so we can\n         * iterate over the pairs for easy set difference operations.\n         * @private\n         */\n        this.peakCacheRanges = [];\n        /**\n         * Length of the entire cachable region, used for resetting the cache\n         * when this changes (zoom events, for instance).\n         * @private\n         */\n        this.peakCacheLength = -1;\n    }\n\n    /**\n     * Add a range of peaks to the cache\n     *\n     * @param {number} length The length of the range\n     * @param {number} start The x offset of the start of the range\n     * @param {number} end The x offset of the end of the range\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    addRangeToPeakCache(length, start, end) {\n        if (length != this.peakCacheLength) {\n            this.clearPeakCache();\n            this.peakCacheLength = length;\n        }\n\n        // Return ranges that weren't in the cache before the call.\n        let uncachedRanges = [];\n        let i = 0;\n        // Skip ranges before the current start.\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] < start\n        ) {\n            i++;\n        }\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\n        // |start| falls between an existing range, and the uncached region\n        // starts when we encounter the next node in |peakCacheRanges| or\n        // |end|, whichever comes first.\n        if (i % 2 == 0) {\n            uncachedRanges.push(start);\n        }\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] <= end\n        ) {\n            uncachedRanges.push(this.peakCacheRanges[i]);\n            i++;\n        }\n        // If |i| is even, |end| is after all existing ranges.\n        if (i % 2 == 0) {\n            uncachedRanges.push(end);\n        }\n\n        // Filter out the 0-length ranges.\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            }\n            return item != arr[pos - 1] && item != arr[pos + 1];\n        });\n\n        // Merge the two ranges together, uncachedRanges will either contain\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\n        // duplicates are detected, remove both and extend the range.\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n        this.peakCacheRanges = this.peakCacheRanges\n            .sort((a, b) => a - b)\n            .filter((item, pos, arr) => {\n                if (pos == 0) {\n                    return item != arr[pos + 1];\n                } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                }\n                return item != arr[pos - 1] && item != arr[pos + 1];\n            });\n\n        // Push the uncached ranges into an array of arrays for ease of\n        // iteration in the functions that call this.\n        const uncachedRangePairs = [];\n        for (i = 0; i < uncachedRanges.length; i += 2) {\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\n        }\n\n        return uncachedRangePairs;\n    }\n\n    /**\n     * For testing\n     *\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    getCacheRanges() {\n        const peakCacheRangePairs = [];\n        let i;\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n            peakCacheRangePairs.push([\n                this.peakCacheRanges[i],\n                this.peakCacheRanges[i + 1]\n            ]);\n        }\n        return peakCacheRangePairs;\n    }\n}\n","import utilMax from './max';\r\nimport utilmin from './min';\r\n\r\n/**\r\n * Get the largest absolute value in an array\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Largest number found\r\n * @example console.log(max([-3, 2, 1]), max([-3, 2, 4])); // logs 3 4\r\n * @since 4.3.0\r\n */\r\nexport default function absMax(values) {\r\n    const max = utilMax(values);\r\n    const min = utilmin(values);\r\n    return -min > max ? -min : max;\r\n}\r\n","/**\n * Returns a number limited to the given range.\n *\n * @param {number} val The number to be limited to a range\n * @param {number} min The lower boundary of the limit range\n * @param {number} max The upper boundary of the limit range\n * @returns {number} A number in the range [min, max]\n */\nexport default function clamp(val, min, max) {\n    return Math.min(Math.max(min, val), max);\n}\n","/**\n * @since 3.0.0\n */\n\nimport Observer from './observer';\n\nclass ProgressHandler {\n    /**\n     * Instantiate ProgressHandler\n     *\n     * @param {Observer} instance The `fetchFile` observer instance.\n     * @param {Number} contentLength Content length.\n     * @param {Response} response Response object.\n     */\n    constructor(instance, contentLength, response) {\n        this.instance = instance;\n        this.instance._reader = response.body.getReader();\n\n        this.total = parseInt(contentLength, 10);\n        this.loaded = 0;\n    }\n\n    /**\n     * A method that is called once, immediately after the `ReadableStream``\n     * is constructed.\n     *\n     * @param {ReadableStreamDefaultController} controller Controller instance\n     *     used to control the stream.\n     */\n    start(controller) {\n        const read = () => {\n            // instance._reader.read() returns a promise that resolves\n            // when a value has been received\n            this.instance._reader\n                .read()\n                .then(({ done, value }) => {\n                    // result objects contain two properties:\n                    // done  - true if the stream has already given you all its data.\n                    // value - some data. Always undefined when done is true.\n                    if (done) {\n                        // ensure onProgress called when content-length=0\n                        if (this.total === 0) {\n                            this.instance.onProgress.call(this.instance, {\n                                loaded: this.loaded,\n                                total: this.total,\n                                lengthComputable: false\n                            });\n                        }\n                        // no more data needs to be consumed, close the stream\n                        controller.close();\n                        return;\n                    }\n\n                    this.loaded += value.byteLength;\n                    this.instance.onProgress.call(this.instance, {\n                        loaded: this.loaded,\n                        total: this.total,\n                        lengthComputable: !(this.total === 0)\n                    });\n                    // enqueue the next data chunk into our target stream\n                    controller.enqueue(value);\n                    read();\n                })\n                .catch(error => {\n                    controller.error(error);\n                });\n        };\n\n        read();\n    }\n}\n\n/**\n * Load a file using `fetch`.\n *\n * @param {object} options Request options to use. See example below.\n * @returns {Observer} Observer instance\n * @example\n * // default options\n * let options = {\n *     url: undefined,\n *     method: 'GET',\n *     mode: 'cors',\n *     credentials: 'same-origin',\n *     cache: 'default',\n *     responseType: 'json',\n *     requestHeaders: [],\n *     redirect: 'follow',\n *     referrer: 'client'\n * };\n *\n * // override some options\n * options.url = '../media/demo.wav';\n\n * // available types: 'arraybuffer', 'blob', 'json' or 'text'\n * options.responseType = 'arraybuffer';\n *\n * // make fetch call\n * let request = util.fetchFile(options);\n *\n * // listen for events\n * request.on('progress', e => {\n *     console.log('progress', e);\n * });\n *\n * request.on('success', data => {\n *     console.log('success!', data);\n * });\n *\n * request.on('error', e => {\n *     console.warn('fetchFile error: ', e);\n * });\n */\nexport default function fetchFile(options) {\n    if (!options) {\n        throw new Error('fetch options missing');\n    } else if (!options.url) {\n        throw new Error('fetch url missing');\n    }\n    const instance = new Observer();\n    const fetchHeaders = new Headers();\n    const fetchRequest = new Request(options.url);\n\n    // add ability to abort\n    instance.controller = new AbortController();\n\n    // check if headers have to be added\n    if (options && options.requestHeaders) {\n        // add custom request headers\n        options.requestHeaders.forEach(header => {\n            fetchHeaders.append(header.key, header.value);\n        });\n    }\n\n    // parse fetch options\n    const responseType = options.responseType || 'json';\n    const fetchOptions = {\n        method: options.method || 'GET',\n        headers: fetchHeaders,\n        mode: options.mode || 'cors',\n        credentials: options.credentials || 'same-origin',\n        cache: options.cache || 'default',\n        redirect: options.redirect || 'follow',\n        referrer: options.referrer || 'client',\n        signal: instance.controller.signal\n    };\n\n    fetch(fetchRequest, fetchOptions)\n        .then(response => {\n            // store response reference\n            instance.response = response;\n\n            let progressAvailable = true;\n            if (!response.body) {\n                // ReadableStream is not yet supported in this browser\n                // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n                progressAvailable = false;\n            }\n\n            // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\n            const contentLength = response.headers.get('content-length');\n            if (contentLength === null) {\n                // Content-Length server response header missing.\n                // Don't evaluate download progress if we can't compare against a total size\n                // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\n                progressAvailable = false;\n            }\n\n            if (!progressAvailable) {\n                // not able to check download progress so skip it\n                return response;\n            }\n\n            // fire progress event when during load\n            instance.onProgress = e => {\n                instance.fireEvent('progress', e);\n            };\n\n            return new Response(\n                new ReadableStream(\n                    new ProgressHandler(instance, contentLength, response)\n                ),\n                fetchOptions\n            );\n        })\n        .then(response => {\n            let errMsg;\n            if (response.ok) {\n                switch (responseType) {\n                    case 'arraybuffer':\n                        return response.arrayBuffer();\n\n                    case 'json':\n                        return response.json();\n\n                    case 'blob':\n                        return response.blob();\n\n                    case 'text':\n                        return response.text();\n\n                    default:\n                        errMsg = 'Unknown responseType: ' + responseType;\n                        break;\n                }\n            }\n            if (!errMsg) {\n                errMsg = 'HTTP error status: ' + response.status;\n            }\n            throw new Error(errMsg);\n        })\n        .then(response => {\n            instance.fireEvent('success', response);\n        })\n        .catch(error => {\n            instance.fireEvent('error', error);\n        });\n\n    // return the fetch request\n    instance.fetchRequest = fetchRequest;\n    return instance;\n}\n","import reqAnimationFrame from './request-animation-frame';\n\n/**\n * Create a function which will be called at the next requestAnimationFrame\n * cycle\n *\n * @param {function} func The function to call\n *\n * @return {func} The function wrapped within a requestAnimationFrame\n */\nexport default function frame(func) {\n    return (...args) => reqAnimationFrame(() => func(...args));\n}\n","/**\n * Get a random prefixed ID\n *\n * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\n * @returns {String} Random prefixed ID\n * @example\n * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\n *\n * let prefix = 'foo-';\n * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\n */\nexport default function getId(prefix) {\n    if (prefix === undefined) {\n        prefix = 'wavesurfer_';\n    }\n    return (\n        prefix +\n        Math.random()\n            .toString(32)\n            .substring(2)\n    );\n}\n","export { default as getId } from './get-id';\nexport { default as max } from './max';\nexport { default as min } from './min';\nexport { default as absMax } from './absMax';\nexport { default as Observer } from './observer';\nexport { default as style } from './style';\nexport { default as requestAnimationFrame } from './request-animation-frame';\nexport { default as frame } from './frame';\nexport { default as debounce } from 'debounce';\nexport { default as preventClick } from './prevent-click';\nexport { default as fetchFile } from './fetch';\nexport { default as clamp } from './clamp';\nexport { default as withOrientation } from './orientation';\nexport { default as ignoreSilenceMode } from './silence-mode';\n","/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n * @example console.log(max([1, 2, 3])); // logs 3\n */\nexport default function max(values) {\n    let largest = -Infinity;\n    Object.keys(values).forEach(i => {\n        if (values[i] > largest) {\n            largest = values[i];\n        }\n    });\n    return largest;\n}\n","/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Smallest number found\n * @example console.log(min([1, 2, 3])); // logs 1\n */\nexport default function min(values) {\n    let smallest = Number(Infinity);\n    Object.keys(values).forEach(i => {\n        if (values[i] < smallest) {\n            smallest = values[i];\n        }\n    });\n    return smallest;\n}\n","/**\n * @typedef {Object} ListenerDescriptor\n * @property {string} name The name of the event\n * @property {function} callback The callback\n * @property {function} un The function to call to remove the listener\n */\n\n/**\n * Observer class\n */\nexport default class Observer {\n    /**\n     * Instantiate Observer\n     */\n    constructor() {\n        /**\n         * @private\n         * @todo Initialise the handlers here already and remove the conditional\n         * assignment in `on()`\n         */\n        this._disabledEventEmissions = [];\n        this.handlers = null;\n    }\n    /**\n     * Attach a handler function for an event.\n     *\n     * @param {string} event Name of the event to listen to\n     * @param {function} fn The callback to trigger when the event is fired\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    on(event, fn) {\n        if (!this.handlers) {\n            this.handlers = {};\n        }\n\n        let handlers = this.handlers[event];\n        if (!handlers) {\n            handlers = this.handlers[event] = [];\n        }\n        handlers.push(fn);\n\n        // Return an event descriptor\n        return {\n            name: event,\n            callback: fn,\n            un: (e, fn) => this.un(e, fn)\n        };\n    }\n\n    /**\n     * Remove an event handler.\n     *\n     * @param {string} event Name of the event the listener that should be\n     * removed listens to\n     * @param {function} fn The callback that should be removed\n     */\n    un(event, fn) {\n        if (!this.handlers) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        let i;\n        if (handlers) {\n            if (fn) {\n                for (i = handlers.length - 1; i >= 0; i--) {\n                    if (handlers[i] == fn) {\n                        handlers.splice(i, 1);\n                    }\n                }\n            } else {\n                handlers.length = 0;\n            }\n        }\n    }\n\n    /**\n     * Remove all event handlers.\n     */\n    unAll() {\n        this.handlers = null;\n    }\n\n    /**\n     * Attach a handler to an event. The handler is executed at most once per\n     * event type.\n     *\n     * @param {string} event The event to listen to\n     * @param {function} handler The callback that is only to be called once\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    once(event, handler) {\n        const fn = (...args) => {\n            /*  eslint-disable no-invalid-this */\n            handler.apply(this, args);\n            /*  eslint-enable no-invalid-this */\n            setTimeout(() => {\n                this.un(event, fn);\n            }, 0);\n        };\n        return this.on(event, fn);\n    }\n\n    /**\n     * Disable firing a list of events by name. When specified, event handlers for any event type\n     * passed in here will not be called.\n     *\n     * @since 4.0.0\n     * @param {string[]} eventNames an array of event names to disable emissions for\n     * @example\n     * // disable seek and interaction events\n     * wavesurfer.setDisabledEventEmissions(['seek', 'interaction']);\n     */\n    setDisabledEventEmissions(eventNames) {\n        this._disabledEventEmissions = eventNames;\n    }\n\n    /**\n     * plugins borrow part of this class without calling the constructor,\n     * so we have to be careful about _disabledEventEmissions\n     */\n\n    _isDisabledEventEmission(event) {\n        return this._disabledEventEmissions && this._disabledEventEmissions.includes(event);\n    }\n\n    /**\n     * Manually fire an event\n     *\n     * @param {string} event The event to fire manually\n     * @param {...any} args The arguments with which to call the listeners\n     */\n    fireEvent(event, ...args) {\n        if (!this.handlers || this._isDisabledEventEmission(event)) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        handlers &&\n            handlers.forEach(fn => {\n                fn(...args);\n            });\n    }\n}\n","const verticalPropMap = {\n    width: 'height',\n    height: 'width',\n\n    overflowX: 'overflowY',\n    overflowY: 'overflowX',\n\n    clientWidth: 'clientHeight',\n    clientHeight: 'clientWidth',\n\n    clientX: 'clientY',\n    clientY: 'clientX',\n\n    scrollWidth: 'scrollHeight',\n    scrollLeft: 'scrollTop',\n\n    offsetLeft: 'offsetTop',\n    offsetTop: 'offsetLeft',\n    offsetHeight: 'offsetWidth',\n    offsetWidth: 'offsetHeight',\n\n    left: 'top',\n    right: 'bottom',\n    top: 'left',\n    bottom: 'right',\n\n    borderRightStyle: 'borderBottomStyle',\n    borderRightWidth: 'borderBottomWidth',\n    borderRightColor: 'borderBottomColor'\n};\n\n/**\n * Convert a horizontally-oriented property name to a vertical one.\n *\n * @param {string} prop A property name\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {string} prop, converted appropriately\n */\nfunction mapProp(prop, vertical) {\n    if (Object.prototype.hasOwnProperty.call(verticalPropMap, prop)) {\n        return vertical ? verticalPropMap[prop] : prop;\n    } else {\n        return prop;\n    }\n}\n\nconst isProxy = Symbol(\"isProxy\");\n\n/**\n * Returns an appropriately oriented object based on vertical.\n * If vertical is true, attribute getting and setting will be mapped through\n * verticalPropMap, so that e.g. getting the object's .width will give its\n * .height instead.\n * Certain methods of an oriented object will return oriented objects as well.\n * Oriented objects can't be added to the DOM directly since they are Proxy objects\n * and thus fail typechecks. Use domElement to get the actual element for this.\n *\n * @param {object} target The object to be wrapped and oriented\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {Proxy} An oriented object with attr translation via verticalAttrMap\n * @since 5.0.0\n */\nexport default function withOrientation(target, vertical) {\n    if (target[isProxy]) {\n        return target;\n    } else {\n        return new Proxy(\n            target, {\n                get: function(obj, prop, receiver) {\n                    if (prop === isProxy) {\n                        return true;\n                    } else if (prop === 'domElement') {\n                        return obj;\n                    } else if (prop === 'style') {\n                        return withOrientation(obj.style, vertical);\n                    } else if (prop === 'canvas') {\n                        return withOrientation(obj.canvas, vertical);\n                    } else if (prop === 'getBoundingClientRect') {\n                        return function(...args) {\n                            return withOrientation(obj.getBoundingClientRect(...args), vertical);\n                        };\n                    } else if (prop === 'getContext') {\n                        return function(...args) {\n                            return withOrientation(obj.getContext(...args), vertical);\n                        };\n                    } else {\n                        let value = obj[mapProp(prop, vertical)];\n                        return typeof value == 'function' ? value.bind(obj) : value;\n                    }\n                },\n                set: function(obj, prop, value) {\n                    obj[mapProp(prop, vertical)] = value;\n                    return true;\n                }\n            }\n        );\n    }\n}\n","/**\n * Stops propagation of click event and removes event listener\n *\n * @private\n * @param {object} event The click event\n */\nfunction preventClickHandler(event) {\n    event.stopPropagation();\n    document.body.removeEventListener('click', preventClickHandler, true);\n}\n\n/**\n * Starts listening for click event and prevent propagation\n *\n * @param {object} values Values\n */\nexport default function preventClick(values) {\n    document.body.addEventListener('click', preventClickHandler, true);\n}\n","/* eslint-disable valid-jsdoc */\n/**\n * Returns the `requestAnimationFrame` function for the browser, or a shim with\n * `setTimeout` if the function is not found\n *\n * @return {function} Available `requestAnimationFrame` function for the browser\n */\nexport default (\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    ((callback, element) => setTimeout(callback, 1000 / 60))\n).bind(window);\n","/**\n * Ignores device silence mode when using the `WebAudio` backend.\n *\n * Many mobile devices contain a hardware button to mute the ringtone for incoming\n * calls and messages. Unfortunately, on some platforms like iOS, this also mutes\n * wavesurfer's audio when using the `WebAudio` backend. This function creates a\n * temporary `<audio>` element that makes sure the WebAudio backend keeps playing\n * when muting the device ringer.\n *\n * @since 5.2.0\n */\nexport default function ignoreSilenceMode() {\n    // Set the src to a short bit of url encoded as a silent mp3\n    // NOTE The silence MP3 must be high quality, when web audio sounds are played\n    // in parallel the web audio sound is mixed to match the bitrate of the html sound\n    // 0.01 seconds of silence VBR220-260 Joint Stereo 859B\n    const audioData = \"data:audio/mpeg;base64,//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAACAAACcQCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA//////////////////////////////////////////////////////////////////8AAABhTEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAnGMHkkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQxAADgnABGiAAQBCqgCRMAAgEAH///////////////7+n/9FTuQsQH//////2NG0jWUGlio5gLQTOtIoeR2WX////X4s9Atb/JRVCbBUpeRUq//////////////////9RUi0f2jn/+xDECgPCjAEQAABN4AAANIAAAAQVTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==\";\n\n    // disable iOS Airplay (setting the attribute in js doesn't work)\n    let tmp = document.createElement(\"div\");\n    tmp.innerHTML = '<audio x-webkit-airplay=\"deny\"></audio>';\n\n    let audioSilentMode = tmp.children.item(0);\n    audioSilentMode.src = audioData;\n    audioSilentMode.preload = \"auto\";\n    audioSilentMode.type = \"audio/mpeg\";\n    audioSilentMode.disableRemotePlayback = true;\n\n    // play\n    audioSilentMode.play();\n\n    // cleanup\n    audioSilentMode.remove();\n    tmp.remove();\n}\n","/**\n * Apply a map of styles to an element\n *\n * @param {HTMLElement} el The element that the styles will be applied to\n * @param {Object} styles The map of propName: attribute, both are used as-is\n *\n * @return {HTMLElement} el\n */\nexport default function style(el, styles) {\n    Object.keys(styles).forEach(prop => {\n        if (el.style[prop] !== styles[prop]) {\n            el.style[prop] = styles[prop];\n        }\n    });\n    return el;\n}\n","import * as util from './util';\nimport MultiCanvas from './drawer.multicanvas';\nimport WebAudio from './webaudio';\nimport MediaElement from './mediaelement';\nimport PeakCache from './peakcache';\nimport MediaElementWebAudio from './mediaelement-webaudio';\n\n/*\n * This work is licensed under a BSD-3-Clause License.\n */\n\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n\n/**\n * @typedef {Object} WavesurferParams\n * @property {AudioContext} audioContext=null Use your own previously\n * initialized AudioContext or leave blank.\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n * slower.\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\n * initialized ScriptProcessorNode or leave blank.\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\n * waveform on current progress\n * @property {number} autoCenterRate=5 If autoCenter is active, rate at which the\n * waveform is centered\n * @property {boolean} autoCenterImmediately=false If autoCenter is active, immediately\n * center waveform on current progress\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'|'MediaElementWebAudio'` In most cases\n * you don't have to set this manually. MediaElement is a fallback for unsupported browsers.\n * MediaElementWebAudio allows to use WebAudio API also with big audio files, loading audio like with\n * MediaElement backend (HTML5 audio tag). You have to use the same methods of MediaElement backend for loading and\n * playback, giving also peaks, so the audio data are not decoded. In this way you can use WebAudio features, like filters,\n * also with audio with big duration. For example:\n * ` wavesurfer.load(url | HTMLMediaElement, peaks, preload, duration);\n *   wavesurfer.play();\n *   wavesurfer.setFilter(customFilter);\n * `\n * @property {string} backgroundColor=null Change background color of the\n * waveform container.\n * @property {number} barHeight=1 The height of the wave bars.\n * @property {number} barRadius=0 The radius of the wave bars. Makes bars rounded\n * @property {number} barGap=null The optional spacing between bars of the wave,\n * if not provided will be calculated in legacy format.\n * @property {number} barWidth=null Draw the waveform using bars.\n * @property {number} barMinHeight=null If specified, draw at least a bar of this height,\n * eliminating waveform gaps\n * @property {boolean} closeAudioContext=false Close and nullify all audio\n * contexts when the destroy method is called.\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the waveform should be drawn. This is the only required parameter.\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\n * the playhead position.\n * @property {number} cursorWidth=1 Measured in pixels.\n * @property {object} drawingContextAttributes={desynchronized: false} Drawing context\n * attributes.\n * @property {number} duration=null Optional audio length so pre-rendered peaks\n * can be display immediately for example.\n * @property {boolean} fillParent=true Whether to fill the entire container or\n * draw only according to `minPxPerSec`.\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\n * when zooming to get a more detailed waveform.\n * @property {number} height=128 The height of the waveform. Measured in\n * pixels.\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n * scrollbar when one would normally be shown.\n * @property {boolean} hideCursor=false Whether to hide the mouse cursor\n * when one would normally be shown by default.\n * @property {boolean} ignoreSilenceMode=false If true, ignores device silence mode\n * when using the `WebAudio` backend.\n * @property {boolean} interact=true Whether the mouse interaction will be\n * enabled at initialization. You can switch this parameter at any time later\n * on.\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n * looping of selected regions\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n * even integer). If the waveform is longer than this value, additional canvases\n * will be used to render the waveform, which is useful for very large waveforms\n * that may be too wide for browsers to draw on a single canvas.\n * @property {boolean} mediaControls=false (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * this enables the native controls for the media element\n * @property {string} mediaType='audio' (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * `'audio'|'video'` ('video' only for `MediaElement`)\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n * audio.\n * @property {boolean} normalize=false If true, normalize by the maximum peak\n * instead of 1.0.\n * @property {boolean} partialRender=false Use the PeakCache to improve\n * rendering speed of large waveforms\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n * calculate display\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n * register during instantiation, they will be directly initialised unless they\n * are added with the `deferInit` property set to true.\n * @property {string} progressColor='#555' The fill color of the part of the\n * waveform behind the cursor. When `progressColor` and `waveColor` are the same\n * the progress wave is not rendered at all.\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\n * media element in the DOM when the player is destroyed. This is useful when\n * reusing an existing media element via the `loadMediaElement` method.\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n * renderer.\n * @property {boolean|number} responsive=false If set to `true` resize the\n * waveform, when the window is resized. This is debounced with a `100ms`\n * timeout by default. If this parameter is a number it represents that timeout.\n * @property {boolean} rtl=false If set to `true`, renders waveform from\n * right-to-left.\n * @property {boolean} scrollParent=false Whether to scroll the container with a\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\n * (see fillParent).\n * @property {number} skipLength=2 Number of seconds to skip with the\n * skipForward() and skipBackward() methods.\n * @property {boolean} splitChannels=false Render with separate waveforms for\n * the channels of the audio\n * @property {SplitChannelOptions} splitChannelsOptions={} Options for splitChannel rendering\n * @property {boolean} vertical=false Render the waveform vertically instead of horizontally.\n * @property {string} waveColor='#999' The fill color of the waveform after the\n * cursor.\n * @property {object} xhr={} XHR options. For example:\n * `let xhr = {\n *     cache: 'default',\n *     mode: 'cors',\n *     method: 'GET',\n *     credentials: 'same-origin',\n *     redirect: 'follow',\n *     referrer: 'client',\n *     requestHeaders: [\n *         {\n *             key: 'Authorization',\n *             value: 'my-token'\n *         }\n *     ]\n * };`\n */\n\n/**\n * @typedef {Object} PluginDefinition\n * @desc The Object used to describe a plugin\n * @example wavesurfer.addPlugin(pluginDefinition);\n * @property {string} name The name of the plugin, the plugin instance will be\n * added as a property to the wavesurfer instance under this name\n * @property {?Object} staticProps The properties that should be added to the\n * wavesurfer instance as static properties\n * @property {?boolean} deferInit Don't initialise plugin\n * automatically\n * @property {Object} params={} The plugin parameters, they are the first parameter\n * passed to the plugin class constructor function\n * @property {PluginClass} instance The plugin instance factory, is called with\n * the dependency specified in extends. Returns the plugin class.\n */\n\n/**\n * @typedef {Object} SplitChannelOptions\n * @desc parameters applied when splitChannels option is true\n * @property {boolean} overlay=false determines whether channels are rendered on top of each other or on separate tracks\n * @property {object} channelColors={} object describing color for each channel. Example:\n * {\n *     0: {\n *         progressColor: 'green',\n *         waveColor: 'pink'\n *     },\n *     1: {\n *         progressColor: 'orange',\n *         waveColor: 'purple'\n *     }\n * }\n * @property {number[]} filterChannels=[] indexes of channels to be hidden from rendering\n * @property {boolean} relativeNormalization=false determines whether\n * normalization is done per channel or maintains proportionality between\n * channels. Only applied when normalize and splitChannels are both true.\n * @property {boolean} splitDragSelection=false determines if drag selection in regions\n * plugin works separately on each channel or only one selection for all channels\n * @since 4.3.0\n */\n\n/**\n * @interface PluginClass\n *\n * @desc This is the interface which is implemented by all plugin classes. Note\n * that this only turns into an observer after being passed through\n * `wavesurfer.addPlugin`.\n *\n * @extends {Observer}\n */\nclass PluginClass {\n    /**\n     * Plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * It returns a `PluginDefinition` object representing the plugin.\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     */\n    create(params) {}\n    /**\n     * Construct the plugin\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     * @param {Object} ws The wavesurfer instance\n     */\n    constructor(params, ws) {}\n    /**\n     * Initialise the plugin\n     *\n     * Start doing something. This is called by\n     * `wavesurfer.initPlugin(pluginName)`\n     */\n    init() {}\n    /**\n     * Destroy the plugin instance\n     *\n     * Stop doing something. This is called by\n     * `wavesurfer.destroyPlugin(pluginName)`\n     */\n    destroy() {}\n}\n\n/**\n * WaveSurfer core library class\n *\n * @extends {Observer}\n * @example\n * const params = {\n *   container: '#waveform',\n *   waveColor: 'violet',\n *   progressColor: 'purple'\n * };\n *\n * // initialise like this\n * const wavesurfer = WaveSurfer.create(params);\n *\n * // or like this ...\n * const wavesurfer = new WaveSurfer(params);\n * wavesurfer.init();\n *\n * // load audio file\n * wavesurfer.load('example/media/demo.wav');\n */\nexport default class WaveSurfer extends util.Observer {\n    /** @private */\n    defaultParams = {\n        audioContext: null,\n        audioScriptProcessor: null,\n        audioRate: 1,\n        autoCenter: true,\n        autoCenterRate: 5,\n        autoCenterImmediately: false,\n        backend: 'WebAudio',\n        backgroundColor: null,\n        barHeight: 1,\n        barRadius: 0,\n        barGap: null,\n        barMinHeight: null,\n        container: null,\n        cursorColor: '#333',\n        cursorWidth: 1,\n        dragSelection: true,\n        drawingContextAttributes: {\n            // Boolean that hints the user agent to reduce the latency\n            // by desynchronizing the canvas paint cycle from the event\n            // loop\n            desynchronized: false\n        },\n        duration: null,\n        fillParent: true,\n        forceDecode: false,\n        height: 128,\n        hideScrollbar: false,\n        hideCursor: false,\n        ignoreSilenceMode: false,\n        interact: true,\n        loopSelection: true,\n        maxCanvasWidth: 4000,\n        mediaContainer: null,\n        mediaControls: false,\n        mediaType: 'audio',\n        minPxPerSec: 20,\n        normalize: false,\n        partialRender: false,\n        pixelRatio:\n            window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n        plugins: [],\n        progressColor: '#555',\n        removeMediaElementOnDestroy: true,\n        renderer: MultiCanvas,\n        responsive: false,\n        rtl: false,\n        scrollParent: false,\n        skipLength: 2,\n        splitChannels: false,\n        splitChannelsOptions: {\n            overlay: false,\n            channelColors: {},\n            filterChannels: [],\n            relativeNormalization: false,\n            splitDragSelection: false\n        },\n        vertical: false,\n        waveColor: '#999',\n        xhr: {}\n    };\n\n    /** @private */\n    backends = {\n        MediaElement,\n        WebAudio,\n        MediaElementWebAudio\n    };\n\n    /**\n     * Instantiate this class, call its `init` function and returns it\n     *\n     * @param {WavesurferParams} params The wavesurfer parameters\n     * @return {Object} WaveSurfer instance\n     * @example const wavesurfer = WaveSurfer.create(params);\n     */\n    static create(params) {\n        const wavesurfer = new WaveSurfer(params);\n        return wavesurfer.init();\n    }\n\n    /**\n     * The library version number is available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {String}\n     * @example\n     * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\n     */\n    static VERSION = __VERSION__;\n\n    /**\n     * Functions in the `util` property are available as a prototype property to\n     * all instances\n     *\n     * @type {Object}\n     * @example\n     * const wavesurfer = WaveSurfer.create(params);\n     * wavesurfer.util.style(myElement, { background: 'blue' });\n     */\n    util = util;\n\n    /**\n     * Functions in the `util` property are available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {Object}\n     * @example\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\n     */\n    static util = util;\n\n    /**\n     * Initialise wavesurfer instance\n     *\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\n     * @example\n     * const wavesurfer = new WaveSurfer(params);\n     * @returns {this} Wavesurfer instance\n     */\n    constructor(params) {\n        super();\n        /**\n         * Extract relevant parameters (or defaults)\n         * @private\n         */\n        this.params = Object.assign({}, this.defaultParams, params);\n        this.params.splitChannelsOptions = Object.assign(\n            {},\n            this.defaultParams.splitChannelsOptions,\n            params.splitChannelsOptions\n        );\n        /** @private */\n        this.container =\n            'string' == typeof params.container\n                ? document.querySelector(this.params.container)\n                : this.params.container;\n\n        if (!this.container) {\n            throw new Error('Container element not found');\n        }\n\n        if (this.params.mediaContainer == null) {\n            /** @private */\n            this.mediaContainer = this.container;\n        } else if (typeof this.params.mediaContainer == 'string') {\n            /** @private */\n            this.mediaContainer = document.querySelector(\n                this.params.mediaContainer\n            );\n        } else {\n            /** @private */\n            this.mediaContainer = this.params.mediaContainer;\n        }\n\n        if (!this.mediaContainer) {\n            throw new Error('Media Container element not found');\n        }\n\n        if (this.params.maxCanvasWidth <= 1) {\n            throw new Error('maxCanvasWidth must be greater than 1');\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\n            throw new Error('maxCanvasWidth must be an even number');\n        }\n\n        if (this.params.rtl === true) {\n            if (this.params.vertical === true) {\n                util.style(this.container, { transform: 'rotateX(180deg)' });\n            } else {\n                util.style(this.container, { transform: 'rotateY(180deg)' });\n            }\n        }\n\n        if (this.params.backgroundColor) {\n            this.setBackgroundColor(this.params.backgroundColor);\n        }\n\n        /**\n         * @private Used to save the current volume when muting so we can\n         * restore once unmuted\n         * @type {number}\n         */\n        this.savedVolume = 0;\n\n        /**\n         * @private The current muted state\n         * @type {boolean}\n         */\n        this.isMuted = false;\n\n        /**\n         * @private Will hold a list of event descriptors that need to be\n         * canceled on subsequent loads of audio\n         * @type {Object[]}\n         */\n        this.tmpEvents = [];\n\n        /**\n         * @private Holds any running audio downloads\n         * @type {Observer}\n         */\n        this.currentRequest = null;\n        /** @private */\n        this.arraybuffer = null;\n        /** @private */\n        this.drawer = null;\n        /** @private */\n        this.backend = null;\n        /** @private */\n        this.peakCache = null;\n\n        // cache constructor objects\n        if (typeof this.params.renderer !== 'function') {\n            throw new Error('Renderer parameter is invalid');\n        }\n        /**\n         * @private The uninitialised Drawer class\n         */\n        this.Drawer = this.params.renderer;\n        /**\n         * @private The uninitialised Backend class\n         */\n        // Back compat\n        if (this.params.backend == 'AudioElement') {\n            this.params.backend = 'MediaElement';\n        }\n\n        if (\n            (this.params.backend == 'WebAudio' ||\n                this.params.backend === 'MediaElementWebAudio') &&\n            !WebAudio.prototype.supportsWebAudio.call(null)\n        ) {\n            this.params.backend = 'MediaElement';\n        }\n        this.Backend = this.backends[this.params.backend];\n\n        /**\n         * @private map of plugin names that are currently initialised\n         */\n        this.initialisedPluginList = {};\n        /** @private */\n        this.isDestroyed = false;\n\n        /**\n         * Get the current ready status.\n         *\n         * @example const isReady = wavesurfer.isReady;\n         * @return {boolean}\n         */\n        this.isReady = false;\n\n        // responsive debounced event listener. If this.params.responsive is not\n        // set, this is never called. Use 100ms or this.params.responsive as\n        // timeout for the debounce function.\n        let prevWidth = 0;\n        this._onResize = util.debounce(\n            () => {\n                if (\n                    this.drawer.wrapper &&\n                    prevWidth != this.drawer.wrapper.clientWidth &&\n                    !this.params.scrollParent\n                ) {\n                    prevWidth = this.drawer.wrapper.clientWidth;\n                    if (prevWidth) {\n                        // redraw only if waveform container is rendered and has a width\n                        this.drawer.fireEvent('redraw');\n                    }\n                }\n            },\n            typeof this.params.responsive === 'number'\n                ? this.params.responsive\n                : 100\n        );\n\n        return this;\n    }\n\n    /**\n     * Initialise the wave\n     *\n     * @example\n     * var wavesurfer = new WaveSurfer(params);\n     * wavesurfer.init();\n     * @return {this} The wavesurfer instance\n     */\n    init() {\n        this.registerPlugins(this.params.plugins);\n        this.createDrawer();\n        this.createBackend();\n        this.createPeakCache();\n        return this;\n    }\n\n    /**\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n     * this function is called in the init function of wavesurfer\n     *\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n     * @return {this} The wavesurfer instance\n     */\n    registerPlugins(plugins) {\n        // first instantiate all the plugins\n        plugins.forEach(plugin => this.addPlugin(plugin));\n\n        // now run the init functions\n        plugins.forEach(plugin => {\n            // call init function of the plugin if deferInit is falsey\n            // in that case you would manually use initPlugins()\n            if (!plugin.deferInit) {\n                this.initPlugin(plugin.name);\n            }\n        });\n        this.fireEvent('plugins-registered', plugins);\n        return this;\n    }\n\n    /**\n     * Get a map of plugin names that are currently initialised\n     *\n     * @example wavesurfer.getPlugins();\n     * @return {Object} Object with plugin names\n     */\n    getActivePlugins() {\n        return this.initialisedPluginList;\n    }\n\n    /**\n     * Add a plugin object to wavesurfer\n     *\n     * @param {PluginDefinition} plugin A plugin definition\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n     * @return {this} The wavesurfer instance\n     */\n    addPlugin(plugin) {\n        if (!plugin.name) {\n            throw new Error('Plugin does not have a name!');\n        }\n        if (!plugin.instance) {\n            throw new Error(\n                `Plugin ${plugin.name} does not have an instance property!`\n            );\n        }\n\n        // staticProps properties are applied to wavesurfer instance\n        if (plugin.staticProps) {\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\n                /**\n                 * Properties defined in a plugin definition's `staticProps` property are added as\n                 * staticProps properties of the WaveSurfer instance\n                 */\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n            });\n        }\n\n        const Instance = plugin.instance;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Instance.prototype[key] = util.Observer.prototype[key];\n        });\n\n        /**\n         * Instantiated plugin classes are added as a property of the wavesurfer\n         * instance\n         * @type {Object}\n         */\n        this[plugin.name] = new Instance(plugin.params || {}, this);\n        this.fireEvent('plugin-added', plugin.name);\n        return this;\n    }\n\n    /**\n     * Initialise a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-initialised\n     * @example wavesurfer.initPlugin('minimap');\n     * @return {this} The wavesurfer instance\n     */\n    initPlugin(name) {\n        if (!this[name]) {\n            throw new Error(`Plugin ${name} has not been added yet!`);\n        }\n        if (this.initialisedPluginList[name]) {\n            // destroy any already initialised plugins\n            this.destroyPlugin(name);\n        }\n        this[name].init();\n        this.initialisedPluginList[name] = true;\n        this.fireEvent('plugin-initialised', name);\n        return this;\n    }\n\n    /**\n     * Destroy a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-destroyed\n     * @example wavesurfer.destroyPlugin('minimap');\n     * @returns {this} The wavesurfer instance\n     */\n    destroyPlugin(name) {\n        if (!this[name]) {\n            throw new Error(\n                `Plugin ${name} has not been added yet and cannot be destroyed!`\n            );\n        }\n        if (!this.initialisedPluginList[name]) {\n            throw new Error(\n                `Plugin ${name} is not active and cannot be destroyed!`\n            );\n        }\n        if (typeof this[name].destroy !== 'function') {\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\n        }\n\n        this[name].destroy();\n        delete this.initialisedPluginList[name];\n        this.fireEvent('plugin-destroyed', name);\n        return this;\n    }\n\n    /**\n     * Destroy all initialised plugins. Convenience function to use when\n     * wavesurfer is removed\n     *\n     * @private\n     */\n    destroyAllPlugins() {\n        Object.keys(this.initialisedPluginList).forEach(name =>\n            this.destroyPlugin(name)\n        );\n    }\n\n    /**\n     * Create the drawer and draw the waveform\n     *\n     * @private\n     * @emits WaveSurfer#drawer-created\n     */\n    createDrawer() {\n        this.drawer = new this.Drawer(this.container, this.params);\n        this.drawer.init();\n        this.fireEvent('drawer-created', this.drawer);\n\n        if (this.params.responsive !== false) {\n            window.addEventListener('resize', this._onResize, true);\n            window.addEventListener('orientationchange', this._onResize, true);\n        }\n\n        this.drawer.on('redraw', () => {\n            this.drawBuffer();\n            this.drawer.progress(this.backend.getPlayedPercents());\n        });\n\n        // Click-to-seek\n        this.drawer.on('click', (e, progress) => {\n            setTimeout(() => this.seekTo(progress), 0);\n        });\n\n        // Relay the scroll event from the drawer\n        this.drawer.on('scroll', e => {\n            if (this.params.partialRender) {\n                this.drawBuffer();\n            }\n            this.fireEvent('scroll', e);\n        });\n    }\n\n    /**\n     * Create the backend\n     *\n     * @private\n     * @emits WaveSurfer#backend-created\n     */\n    createBackend() {\n        if (this.backend) {\n            this.backend.destroy();\n        }\n\n        this.backend = new this.Backend(this.params);\n        this.backend.init();\n        this.fireEvent('backend-created', this.backend);\n\n        this.backend.on('finish', () => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('finish');\n        });\n        this.backend.on('play', () => this.fireEvent('play'));\n        this.backend.on('pause', () => this.fireEvent('pause'));\n\n        this.backend.on('audioprocess', time => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('audioprocess', time);\n        });\n\n        // only needed for MediaElement and MediaElementWebAudio backend\n        if (\n            this.params.backend === 'MediaElement' ||\n            this.params.backend === 'MediaElementWebAudio'\n        ) {\n            this.backend.on('seek', () => {\n                this.drawer.progress(this.backend.getPlayedPercents());\n            });\n\n            this.backend.on('volume', () => {\n                let newVolume = this.getVolume();\n                this.fireEvent('volume', newVolume);\n\n                if (this.backend.isMuted !== this.isMuted) {\n                    this.isMuted = this.backend.isMuted;\n                    this.fireEvent('mute', this.isMuted);\n                }\n            });\n        }\n    }\n\n    /**\n     * Create the peak cache\n     *\n     * @private\n     */\n    createPeakCache() {\n        if (this.params.partialRender) {\n            this.peakCache = new PeakCache();\n        }\n    }\n\n    /**\n     * Get the duration of the audio clip\n     *\n     * @example const duration = wavesurfer.getDuration();\n     * @return {number} Duration in seconds\n     */\n    getDuration() {\n        return this.backend.getDuration();\n    }\n\n    /**\n     * Get the current playback position\n     *\n     * @example const currentTime = wavesurfer.getCurrentTime();\n     * @return {number} Playback position in seconds\n     */\n    getCurrentTime() {\n        return this.backend.getCurrentTime();\n    }\n\n    /**\n     * Set the current play time in seconds.\n     *\n     * @param {number} seconds A positive number in seconds. E.g. 10 means 10\n     * seconds, 60 means 1 minute\n     */\n    setCurrentTime(seconds) {\n        if (seconds >= this.getDuration()) {\n            this.seekTo(1);\n        } else {\n            this.seekTo(seconds / this.getDuration());\n        }\n    }\n\n    /**\n     * Starts playback from the current position. Optional start and end\n     * measured in seconds can be used to set the range of audio to play.\n     *\n     * @param {?number} start Position to start at\n     * @param {?number} end Position to end at\n     * @emits WaveSurfer#interaction\n     * @return {Promise} Result of the backend play method\n     * @example\n     * // play from second 1 to 5\n     * wavesurfer.play(1, 5);\n     */\n    play(start, end) {\n        if (this.params.ignoreSilenceMode) {\n            // ignores device hardware silence mode\n            util.ignoreSilenceMode();\n        }\n\n        this.fireEvent('interaction', () => this.play(start, end));\n        return this.backend.play(start, end);\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} position Position (in seconds) to stop at\n     * @version 3.3.0\n     */\n    setPlayEnd(position) {\n        this.backend.setPlayEnd(position);\n    }\n\n    /**\n     * Stops and pauses playback\n     *\n     * @example wavesurfer.pause();\n     * @return {Promise} Result of the backend pause method\n     */\n    pause() {\n        if (!this.backend.isPaused()) {\n            return this.backend.pause();\n        }\n    }\n\n    /**\n     * Toggle playback\n     *\n     * @example wavesurfer.playPause();\n     * @return {Promise} Result of the backend play or pause method\n     */\n    playPause() {\n        return this.backend.isPaused() ? this.play() : this.pause();\n    }\n\n    /**\n     * Get the current playback state\n     *\n     * @example const isPlaying = wavesurfer.isPlaying();\n     * @return {boolean} False if paused, true if playing\n     */\n    isPlaying() {\n        return !this.backend.isPaused();\n    }\n\n    /**\n     * Skip backward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipBackward();\n     */\n    skipBackward(seconds) {\n        this.skip(-seconds || -this.params.skipLength);\n    }\n\n    /**\n     * Skip forward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipForward();\n     */\n    skipForward(seconds) {\n        this.skip(seconds || this.params.skipLength);\n    }\n\n    /**\n     * Skip a number of seconds from the current position (use a negative value\n     * to go backwards).\n     *\n     * @param {number} offset Amount to skip back or forwards\n     * @example\n     * // go back 2 seconds\n     * wavesurfer.skip(-2);\n     */\n    skip(offset) {\n        const duration = this.getDuration() || 1;\n        let position = this.getCurrentTime() || 0;\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\n        this.seekAndCenter(position / duration);\n    }\n\n    /**\n     * Seeks to a position and centers the view\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @example\n     * // seek and go to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekAndCenter(progress) {\n        this.seekTo(progress);\n        this.drawer.recenter(progress);\n    }\n\n    /**\n     * Seeks to a position\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @emits WaveSurfer#interaction\n     * @emits WaveSurfer#seek\n     * @example\n     * // seek to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekTo(progress) {\n        // return an error if progress is not a number between 0 and 1\n        if (\n            typeof progress !== 'number' ||\n            !isFinite(progress) ||\n            progress < 0 ||\n            progress > 1\n        ) {\n            throw new Error(\n                'Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!'\n            );\n        }\n        this.fireEvent('interaction', () => this.seekTo(progress));\n\n        const isWebAudioBackend = this.params.backend === 'WebAudio';\n        const paused = this.backend.isPaused();\n\n        if (isWebAudioBackend && !paused) {\n            this.backend.pause();\n        }\n\n        // avoid small scrolls while paused seeking\n        const oldScrollParent = this.params.scrollParent;\n        this.params.scrollParent = false;\n        this.backend.seekTo(progress * this.getDuration());\n        this.drawer.progress(progress);\n\n        if (isWebAudioBackend && !paused) {\n            this.backend.play();\n        }\n\n        this.params.scrollParent = oldScrollParent;\n        this.fireEvent('seek', progress);\n    }\n\n    /**\n     * Stops and goes to the beginning.\n     *\n     * @example wavesurfer.stop();\n     */\n    stop() {\n        this.pause();\n        this.seekTo(0);\n        this.drawer.progress(0);\n    }\n\n    /**\n     * Sets the ID of the audio device to use for output and returns a Promise.\n     *\n     * @param {string} deviceId String value representing underlying output\n     * device\n     * @returns {Promise} `Promise` that resolves to `undefined` when there are\n     * no errors detected.\n     */\n    setSinkId(deviceId) {\n        return this.backend.setSinkId(deviceId);\n    }\n\n    /**\n     * Set the playback volume.\n     *\n     * @param {number} newVolume A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     * @emits WaveSurfer#volume\n     */\n    setVolume(newVolume) {\n        this.backend.setVolume(newVolume);\n        this.fireEvent('volume', newVolume);\n    }\n\n    /**\n     * Get the playback volume.\n     *\n     * @return {number} A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    getVolume() {\n        return this.backend.getVolume();\n    }\n\n    /**\n     * Set the playback rate.\n     *\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\n     * speed, 2 means double speed and so on.\n     * @example wavesurfer.setPlaybackRate(2);\n     */\n    setPlaybackRate(rate) {\n        this.backend.setPlaybackRate(rate);\n    }\n\n    /**\n     * Get the playback rate.\n     *\n     * @return {number} The current playback rate.\n     */\n    getPlaybackRate() {\n        return this.backend.getPlaybackRate();\n    }\n\n    /**\n     * Toggle the volume on and off. If not currently muted it will save the\n     * current volume value and turn the volume off. If currently muted then it\n     * will restore the volume to the saved value, and then rest the saved\n     * value.\n     *\n     * @example wavesurfer.toggleMute();\n     */\n    toggleMute() {\n        this.setMute(!this.isMuted);\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @param {boolean} mute Specify `true` to mute audio.\n     * @emits WaveSurfer#volume\n     * @emits WaveSurfer#mute\n     * @example\n     * // unmute\n     * wavesurfer.setMute(false);\n     * console.log(wavesurfer.getMute()) // logs false\n     */\n    setMute(mute) {\n        // ignore all muting requests if the audio is already in that state\n        if (mute === this.isMuted) {\n            this.fireEvent('mute', this.isMuted);\n            return;\n        }\n\n        if (this.backend.setMute) {\n            // Backends such as the MediaElement backend have their own handling\n            // of mute, let them handle it.\n            this.backend.setMute(mute);\n            this.isMuted = mute;\n        } else {\n            if (mute) {\n                // If currently not muted then save current volume,\n                // turn off the volume and update the mute properties\n                this.savedVolume = this.backend.getVolume();\n                this.backend.setVolume(0);\n                this.isMuted = true;\n                this.fireEvent('volume', 0);\n            } else {\n                // If currently muted then restore to the saved volume\n                // and update the mute properties\n                this.backend.setVolume(this.savedVolume);\n                this.isMuted = false;\n                this.fireEvent('volume', this.savedVolume);\n            }\n        }\n        this.fireEvent('mute', this.isMuted);\n    }\n\n    /**\n     * Get the current mute status.\n     *\n     * @example const isMuted = wavesurfer.getMute();\n     * @return {boolean} Current mute status\n     */\n    getMute() {\n        return this.isMuted;\n    }\n\n    /**\n     * Get the list of current set filters as an array.\n     *\n     * Filters must be set with setFilters method first\n     *\n     * @return {array} List of enabled filters\n     */\n    getFilters() {\n        return this.backend.filters || [];\n    }\n\n    /**\n     * Toggles `scrollParent` and redraws\n     *\n     * @example wavesurfer.toggleScroll();\n     */\n    toggleScroll() {\n        this.params.scrollParent = !this.params.scrollParent;\n        this.drawBuffer();\n    }\n\n    /**\n     * Toggle mouse interaction\n     *\n     * @example wavesurfer.toggleInteraction();\n     */\n    toggleInteraction() {\n        this.params.interact = !this.params.interact;\n    }\n\n    /**\n     * Get the fill color of the waveform after the cursor.\n     *\n     * @param {?number} channelIdx Optional index of the channel to get its wave color if splitChannels is true\n     * @return {string|object} A CSS color string, or an array of CSS color strings.\n     */\n    getWaveColor(channelIdx = null) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            return this.params.splitChannelsOptions.channelColors[channelIdx].waveColor;\n        }\n        return this.params.waveColor;\n    }\n\n    /**\n     * Set the fill color of the waveform after the cursor.\n     *\n     * @param {string|object} color A CSS color string, or an array of CSS color strings.\n     * @param {?number} channelIdx Optional index of the channel to set its wave color if splitChannels is true\n     * @example wavesurfer.setWaveColor('#ddd');\n     */\n    setWaveColor(color, channelIdx = null) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            this.params.splitChannelsOptions.channelColors[channelIdx].waveColor = color;\n        } else {\n            this.params.waveColor = color;\n        }\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the fill color of the waveform behind the cursor.\n     *\n     * @param {?number} channelIdx Optional index of the channel to get its progress color if splitChannels is true\n     * @return {string|object} A CSS color string, or an array of CSS color strings.\n     */\n    getProgressColor(channelIdx = null) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            return this.params.splitChannelsOptions.channelColors[channelIdx].progressColor;\n        }\n        return this.params.progressColor;\n    }\n\n    /**\n     * Set the fill color of the waveform behind the cursor.\n     *\n     * @param {string|object} color A CSS color string, or an array of CSS color strings.\n     * @param {?number} channelIdx Optional index of the channel to set its progress color if splitChannels is true\n     * @example wavesurfer.setProgressColor('#400');\n     */\n    setProgressColor(color, channelIdx) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            this.params.splitChannelsOptions.channelColors[channelIdx].progressColor = color;\n        } else {\n            this.params.progressColor = color;\n        }\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the background color of the waveform container.\n     *\n     * @return {string} A CSS color string.\n     */\n    getBackgroundColor() {\n        return this.params.backgroundColor;\n    }\n\n    /**\n     * Set the background color of the waveform container.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setBackgroundColor('#FF00FF');\n     */\n    setBackgroundColor(color) {\n        this.params.backgroundColor = color;\n        util.style(this.container, { background: this.params.backgroundColor });\n    }\n\n    /**\n     * Get the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @return {string} A CSS color string.\n     */\n    getCursorColor() {\n        return this.params.cursorColor;\n    }\n\n    /**\n     * Set the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setCursorColor('#222');\n     */\n    setCursorColor(color) {\n        this.params.cursorColor = color;\n        this.drawer.updateCursor();\n    }\n\n    /**\n     * Get the height of the waveform.\n     *\n     * @return {number} Height measured in pixels.\n     */\n    getHeight() {\n        return this.params.height;\n    }\n\n    /**\n     * Set the height of the waveform.\n     *\n     * @param {number} height Height measured in pixels.\n     * @example wavesurfer.setHeight(200);\n     */\n    setHeight(height) {\n        this.params.height = height;\n        this.drawer.setHeight(height * this.params.pixelRatio);\n        this.drawBuffer();\n    }\n\n    /**\n     * Hide channels from being drawn on the waveform if splitting channels.\n     *\n     * For example, if we want to draw only the peaks for the right stereo channel:\n     *\n     * const wavesurfer = new WaveSurfer.create({...splitChannels: true});\n     * wavesurfer.load('stereo_audio.mp3');\n     *\n     * wavesurfer.setFilteredChannel([0]); <-- hide left channel peaks.\n     *\n     * @param {array} channelIndices Channels to be filtered out from drawing.\n     * @version 4.0.0\n     */\n    setFilteredChannels(channelIndices) {\n        this.params.splitChannelsOptions.filterChannels = channelIndices;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the correct peaks for current wave view-port and render wave\n     *\n     * @private\n     * @emits WaveSurfer#redraw\n     */\n    drawBuffer() {\n        const nominalWidth = Math.round(\n            this.getDuration() *\n                this.params.minPxPerSec *\n                this.params.pixelRatio\n        );\n        const parentWidth = this.drawer.getWidth();\n        let width = nominalWidth;\n        // always start at 0 after zooming for scrolling : issue redraw left part\n        let start = 0;\n        let end = Math.max(start + parentWidth, width);\n        // Fill container\n        if (\n            this.params.fillParent &&\n            (!this.params.scrollParent || nominalWidth < parentWidth)\n        ) {\n            width = parentWidth;\n            start = 0;\n            end = width;\n        }\n\n        let peaks;\n        if (this.params.partialRender) {\n            const newRanges = this.peakCache.addRangeToPeakCache(\n                width,\n                start,\n                end\n            );\n            let i;\n            for (i = 0; i < newRanges.length; i++) {\n                peaks = this.backend.getPeaks(\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n                this.drawer.drawPeaks(\n                    peaks,\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n            }\n        } else {\n            peaks = this.backend.getPeaks(width, start, end);\n            this.drawer.drawPeaks(peaks, width, start, end);\n        }\n        this.fireEvent('redraw', peaks, width);\n    }\n\n    /**\n     * Horizontally zooms the waveform in and out. It also changes the parameter\n     * `minPxPerSec` and enables the `scrollParent` option. Calling the function\n     * with a falsey parameter will reset the zoom state.\n     *\n     * @param {?number} pxPerSec Number of horizontal pixels per second of\n     * audio, if none is set the waveform returns to unzoomed state\n     * @emits WaveSurfer#zoom\n     * @example wavesurfer.zoom(20);\n     */\n    zoom(pxPerSec) {\n        if (!pxPerSec) {\n            this.params.minPxPerSec = this.defaultParams.minPxPerSec;\n            this.params.scrollParent = false;\n        } else {\n            this.params.minPxPerSec = pxPerSec;\n            this.params.scrollParent = true;\n        }\n\n        this.drawBuffer();\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n        this.fireEvent('zoom', pxPerSec);\n    }\n\n    /**\n     * Decode buffer and load\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer Buffer to process\n     */\n    loadArrayBuffer(arraybuffer) {\n        this.decodeArrayBuffer(arraybuffer, data => {\n            if (!this.isDestroyed) {\n                this.loadDecodedBuffer(data);\n            }\n        });\n    }\n\n    /**\n     * Directly load an externally decoded AudioBuffer\n     *\n     * @private\n     * @param {AudioBuffer} buffer Buffer to process\n     * @emits WaveSurfer#ready\n     */\n    loadDecodedBuffer(buffer) {\n        this.backend.load(buffer);\n        this.drawBuffer();\n        this.isReady = true;\n        this.fireEvent('ready');\n    }\n\n    /**\n     * Loads audio data from a Blob or File object\n     *\n     * @param {Blob|File} blob Audio data\n     * @example\n     */\n    loadBlob(blob) {\n        // Create file reader\n        const reader = new FileReader();\n        reader.addEventListener('progress', e => this.onProgress(e));\n        reader.addEventListener('load', e =>\n            this.loadArrayBuffer(e.target.result)\n        );\n        reader.addEventListener('error', () =>\n            this.fireEvent('error', 'Error reading file')\n        );\n        reader.readAsArrayBuffer(blob);\n        this.empty();\n    }\n\n    /**\n     * Loads audio and re-renders the waveform.\n     *\n     * @param {string|HTMLMediaElement} url The url of the audio file or the\n     * audio element with the audio\n     * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\n     * the audio to render the waveform if this is specified\n     * @param {?string} preload (Use with backend `MediaElement` and `MediaElementWebAudio`)\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\n     * @param {?number} duration The duration of the audio. This is used to\n     * render the peaks data in the correct size for the audio duration (as\n     * befits the current `minPxPerSec` and zoom value) without having to decode\n     * the audio.\n     * @returns {void}\n     * @throws Will throw an error if the `url` argument is empty.\n     * @example\n     * // uses fetch or media element to load file (depending on backend)\n     * wavesurfer.load('http://example.com/demo.wav');\n     *\n     * // setting preload attribute with media element backend and supplying\n     * // peaks\n     * wavesurfer.load(\n     *   'http://example.com/demo.wav',\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n     *   true\n     * );\n     */\n    load(url, peaks, preload, duration) {\n        if (!url) {\n            throw new Error('url parameter cannot be empty');\n        }\n        this.empty();\n        if (preload) {\n            // check whether the preload attribute will be usable and if not log\n            // a warning listing the reasons why not and nullify the variable\n            const preloadIgnoreReasons = {\n                \"Preload is not 'auto', 'none' or 'metadata'\":\n                    ['auto', 'metadata', 'none'].indexOf(preload) === -1,\n                'Peaks are not provided': !peaks,\n                \"Backend is not of type 'MediaElement' or 'MediaElementWebAudio'\":\n                    ['MediaElement', 'MediaElementWebAudio'].indexOf(\n                        this.params.backend\n                    ) === -1,\n                'Url is not of type string': typeof url !== 'string'\n            };\n            const activeReasons = Object.keys(preloadIgnoreReasons).filter(\n                reason => preloadIgnoreReasons[reason]\n            );\n            if (activeReasons.length) {\n                // eslint-disable-next-line no-console\n                console.warn(\n                    'Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' +\n                        activeReasons.join('\\n\\t- ')\n                );\n                // stop invalid values from being used\n                preload = null;\n            }\n        }\n\n        // loadBuffer(url, peaks, duration) requires that url is a string\n        // but users can pass in a HTMLMediaElement to WaveSurfer\n        if (this.params.backend === 'WebAudio' && url instanceof HTMLMediaElement) {\n            url = url.src;\n        }\n\n        switch (this.params.backend) {\n            case 'WebAudio':\n                return this.loadBuffer(url, peaks, duration);\n            case 'MediaElement':\n            case 'MediaElementWebAudio':\n                return this.loadMediaElement(url, peaks, preload, duration);\n        }\n    }\n\n    /**\n     * Loads audio using Web Audio buffer backend.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string} url URL of audio file\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Optional duration of audio file\n     * @returns {void}\n     */\n    loadBuffer(url, peaks, duration) {\n        const load = action => {\n            if (action) {\n                this.tmpEvents.push(this.once('ready', action));\n            }\n            return this.getArrayBuffer(url, data => this.loadArrayBuffer(data));\n        };\n\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.fireEvent('waveform-ready');\n            this.tmpEvents.push(this.once('interaction', load));\n        } else {\n            return load();\n        }\n    }\n\n    /**\n     * Either create a media element, or load an existing media element.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\n     * existing HTML5 Audio/Video Element\n     * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\n     * dependency\n     * @param {?boolean} preload Set to true if the preload attribute of the\n     * audio element should be enabled\n     * @param {?number} duration Optional duration of audio file\n     */\n    loadMediaElement(urlOrElt, peaks, preload, duration) {\n        let url = urlOrElt;\n\n        if (typeof urlOrElt === 'string') {\n            this.backend.load(url, this.mediaContainer, peaks, preload);\n        } else {\n            const elt = urlOrElt;\n            this.backend.loadElt(elt, peaks);\n\n            // If peaks are not provided,\n            // url = element.src so we can get peaks with web audio\n            url = elt.src;\n        }\n\n        this.tmpEvents.push(\n            this.backend.once('canplay', () => {\n                // ignore when backend was already destroyed\n                if (!this.backend.destroyed) {\n                    this.drawBuffer();\n                    this.isReady = true;\n                    this.fireEvent('ready');\n                }\n            }),\n            this.backend.once('error', err => this.fireEvent('error', err))\n        );\n\n        // If peaks are provided, render them and fire the `waveform-ready` event.\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.fireEvent('waveform-ready');\n        }\n\n        // If no pre-decoded peaks are provided, or are provided with\n        // forceDecode flag, attempt to download the audio file and decode it\n        // with Web Audio.\n        if (\n            (!peaks || this.params.forceDecode) &&\n            this.backend.supportsWebAudio()\n        ) {\n            this.getArrayBuffer(url, arraybuffer => {\n                this.decodeArrayBuffer(arraybuffer, buffer => {\n                    this.backend.buffer = buffer;\n                    this.backend.setPeaks(null);\n                    this.drawBuffer();\n                    this.fireEvent('waveform-ready');\n                });\n            });\n        }\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {Object} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete\n     */\n    decodeArrayBuffer(arraybuffer, callback) {\n        if (!this.isDestroyed) {\n            this.arraybuffer = arraybuffer;\n            this.backend.decodeArrayBuffer(\n                arraybuffer,\n                data => {\n                    // Only use the decoded data if we haven't been destroyed or\n                    // another decode started in the meantime\n                    if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\n                        callback(data);\n                        this.arraybuffer = null;\n                    }\n                },\n                () => this.fireEvent('error', 'Error decoding audiobuffer')\n            );\n        }\n    }\n\n    /**\n     * Load an array buffer using fetch and pass the result to a callback\n     *\n     * @param {string} url The URL of the file object\n     * @param {function} callback The function to call on complete\n     * @returns {util.fetchFile} fetch call\n     * @private\n     */\n    getArrayBuffer(url, callback) {\n        let options = Object.assign(\n            {\n                url: url,\n                responseType: 'arraybuffer'\n            },\n            this.params.xhr\n        );\n        const request = util.fetchFile(options);\n\n        this.currentRequest = request;\n\n        this.tmpEvents.push(\n            request.on('progress', e => {\n                this.onProgress(e);\n            }),\n            request.on('success', data => {\n                callback(data);\n                this.currentRequest = null;\n            }),\n            request.on('error', e => {\n                this.fireEvent('error', e);\n                this.currentRequest = null;\n            })\n        );\n\n        return request;\n    }\n\n    /**\n     * Called while the audio file is loading\n     *\n     * @private\n     * @param {Event} e Progress event\n     * @emits WaveSurfer#loading\n     */\n    onProgress(e) {\n        let percentComplete;\n        if (e.lengthComputable) {\n            percentComplete = e.loaded / e.total;\n        } else {\n            // Approximate progress with an asymptotic\n            // function, and assume downloads in the 1-3 MB range.\n            percentComplete = e.loaded / (e.loaded + 1000000);\n        }\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n    }\n\n    /**\n     * Exports PCM data into a JSON array and optionally opens in a new window\n     * as valid JSON Blob instance.\n     *\n     * @param {number} length=1024 The scale in which to export the peaks\n     * @param {number} accuracy=10000\n     * @param {?boolean} noWindow Set to true to disable opening a new\n     * window with the JSON\n     * @param {number} start Start index\n     * @param {number} end End index\n     * @return {Promise} Promise that resolves with array of peaks\n     */\n    exportPCM(length, accuracy, noWindow, start, end) {\n        length = length || 1024;\n        start = start || 0;\n        accuracy = accuracy || 10000;\n        noWindow = noWindow || false;\n        const peaks = this.backend.getPeaks(length, start, end);\n        const arr = [].map.call(\n            peaks,\n            val => Math.round(val * accuracy) / accuracy\n        );\n\n        return new Promise((resolve, reject) => {\n            if (!noWindow){\n                const blobJSON = new Blob(\n                    [JSON.stringify(arr)],\n                    {type: 'application/json;charset=utf-8'}\n                );\n                const objURL = URL.createObjectURL(blobJSON);\n                window.open(objURL);\n                URL.revokeObjectURL(objURL);\n            }\n            resolve(arr);\n        });\n    }\n\n    /**\n     * Save waveform image as data URI.\n     *\n     * The default format is `image/png`. Other supported types are\n     * `image/jpeg` and `image/webp`.\n     *\n     * @param {string} format='image/png' A string indicating the image format.\n     * The default format type is `image/png`.\n     * @param {number} quality=1 A number between 0 and 1 indicating the image\n     * quality to use for image formats that use lossy compression such as\n     * `image/jpeg` and `image/webp`.\n     * @param {string} type Image data type to return. Either `dataURL` (default)\n     * or `blob`.\n     * @return {string|string[]|Promise} When using `dataURL` type this returns\n     * a single data URL or an array of data URLs, one for each canvas. When using\n     * `blob` type this returns a `Promise` resolving with an array of `Blob`\n     * instances, one for each canvas.\n     */\n    exportImage(format, quality, type) {\n        if (!format) {\n            format = 'image/png';\n        }\n        if (!quality) {\n            quality = 1;\n        }\n        if (!type) {\n            type = 'dataURL';\n        }\n\n        return this.drawer.getImage(format, quality, type);\n    }\n\n    /**\n     * Cancel any fetch request currently in progress\n     */\n    cancelAjax() {\n        if (this.currentRequest && this.currentRequest.controller) {\n            // If the current request has a ProgressHandler, then its ReadableStream might need to be cancelled too\n            // See: Wavesurfer issue #2042\n            // See Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1583815\n            if (this.currentRequest._reader) {\n                // Ignoring exceptions thrown by call to cancel()\n                this.currentRequest._reader.cancel().catch(err => {});\n            }\n\n            this.currentRequest.controller.abort();\n            this.currentRequest = null;\n        }\n    }\n\n    /**\n     * @private\n     */\n    clearTmpEvents() {\n        this.tmpEvents.forEach(e => e.un());\n    }\n\n    /**\n     * Display empty waveform.\n     */\n    empty() {\n        if (!this.backend.isPaused()) {\n            this.stop();\n            this.backend.disconnectSource();\n        }\n        this.isReady = false;\n        this.cancelAjax();\n        this.clearTmpEvents();\n\n        // empty drawer\n        this.drawer.progress(0);\n        this.drawer.setWidth(0);\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\n    }\n\n    /**\n     * Remove events, elements and disconnect WebAudio nodes.\n     *\n     * @emits WaveSurfer#destroy\n     */\n    destroy() {\n        this.destroyAllPlugins();\n        this.fireEvent('destroy');\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.unAll();\n        if (this.params.responsive !== false) {\n            window.removeEventListener('resize', this._onResize, true);\n            window.removeEventListener(\n                'orientationchange',\n                this._onResize,\n                true\n            );\n        }\n        if (this.backend) {\n            this.backend.destroy();\n            // clears memory usage\n            this.backend = null;\n        }\n        if (this.drawer) {\n            this.drawer.destroy();\n        }\n        this.isDestroyed = true;\n        this.isReady = false;\n        this.arraybuffer = null;\n    }\n}\n","import * as util from './util';\n\n// using constants to prevent someone writing the string wrong\nconst PLAYING = 'playing';\nconst PAUSED = 'paused';\nconst FINISHED = 'finished';\n\n/**\n * WebAudio backend\n *\n * @extends {Observer}\n */\nexport default class WebAudio extends util.Observer {\n    /** scriptBufferSize: size of the processing buffer */\n    static scriptBufferSize = 256;\n    /** audioContext: allows to process audio with WebAudio API */\n    audioContext = null;\n    /** @private */\n    offlineAudioContext = null;\n    /** @private */\n    stateBehaviors = {\n        [PLAYING]: {\n            init() {\n                this.addOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition + this.getPlayedTime();\n            }\n        },\n        [PAUSED]: {\n            init() {\n                this.removeOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition;\n            }\n        },\n        [FINISHED]: {\n            init() {\n                this.removeOnAudioProcess();\n                this.fireEvent('finish');\n            },\n            getPlayedPercents() {\n                return 1;\n            },\n            getCurrentTime() {\n                return this.getDuration();\n            }\n        }\n    };\n\n    /**\n     * Does the browser support this backend\n     *\n     * @return {boolean} Whether or not this browser supports this backend\n     */\n    supportsWebAudio() {\n        return !!(window.AudioContext || window.webkitAudioContext);\n    }\n\n    /**\n     * Get the audio context used by this backend or create one\n     *\n     * @return {AudioContext} Existing audio context, or creates a new one\n     */\n    getAudioContext() {\n        if (!window.WaveSurferAudioContext) {\n            window.WaveSurferAudioContext = new (window.AudioContext ||\n                window.webkitAudioContext)();\n        }\n        return window.WaveSurferAudioContext;\n    }\n\n    /**\n     * Get the offline audio context used by this backend or create one\n     *\n     * @param {number} sampleRate The sample rate to use\n     * @return {OfflineAudioContext} Existing offline audio context, or creates\n     * a new one\n     */\n    getOfflineAudioContext(sampleRate) {\n        if (!window.WaveSurferOfflineAudioContext) {\n            window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext ||\n                window.webkitOfflineAudioContext)(1, 2, sampleRate);\n        }\n        return window.WaveSurferOfflineAudioContext;\n    }\n\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super();\n        /** @private */\n        this.params = params;\n        /** ac: Audio Context instance */\n        this.ac =\n            params.audioContext ||\n            (this.supportsWebAudio() ? this.getAudioContext() : {});\n        /**@private */\n        this.lastPlay = this.ac.currentTime;\n        /** @private */\n        this.startPosition = 0;\n        /** @private */\n        this.scheduledPause = null;\n        /** @private */\n        this.states = {\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\n        };\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.filters = [];\n        /** gainNode: allows to control audio volume */\n        this.gainNode = null;\n        /** @private */\n        this.mergedPeaks = null;\n        /** @private */\n        this.offlineAc = null;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** analyser: provides audio analysis information */\n        this.analyser = null;\n        /** scriptNode: allows processing audio */\n        this.scriptNode = null;\n        /** @private */\n        this.source = null;\n        /** @private */\n        this.splitPeaks = [];\n        /** @private */\n        this.state = null;\n        /** @private */\n        this.explicitDuration = params.duration;\n        /** @private */\n        this.sinkStreamDestination = null;\n        /** @private */\n        this.sinkAudioElement = null;\n        /**\n         * Boolean indicating if the backend was destroyed.\n         */\n        this.destroyed = false;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n\n        this.setState(PAUSED);\n        this.setPlaybackRate(this.params.audioRate);\n        this.setLength(0);\n    }\n\n    /** @private */\n    disconnectFilters() {\n        if (this.filters) {\n            this.filters.forEach(filter => {\n                filter && filter.disconnect();\n            });\n            this.filters = null;\n            // Reconnect direct path\n            this.analyser.connect(this.gainNode);\n        }\n    }\n\n    /**\n     * @private\n     *\n     * @param {string} state The new state\n     */\n    setState(state) {\n        if (this.state !== this.states[state]) {\n            this.state = this.states[state];\n            this.state.init.call(this);\n        }\n    }\n\n    /**\n     * Unpacked `setFilters()`\n     *\n     * @param {...AudioNode} filters One or more filters to set\n     */\n    setFilter(...filters) {\n        this.setFilters(filters);\n    }\n\n    /**\n     * Insert custom Web Audio nodes into the graph\n     *\n     * @param {AudioNode[]} filters Packed filters array\n     * @example\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n     * wavesurfer.backend.setFilter(lowpass);\n     */\n    setFilters(filters) {\n        // Remove existing filters\n        this.disconnectFilters();\n\n        // Insert filters if filter array not empty\n        if (filters && filters.length) {\n            this.filters = filters;\n\n            // Disconnect direct path before inserting filters\n            this.analyser.disconnect();\n\n            // Connect each filter in turn\n            filters\n                .reduce((prev, curr) => {\n                    prev.connect(curr);\n                    return curr;\n                }, this.analyser)\n                .connect(this.gainNode);\n        }\n    }\n    /** Create ScriptProcessorNode to process audio */\n    createScriptNode() {\n        if (this.params.audioScriptProcessor) {\n            this.scriptNode = this.params.audioScriptProcessor;\n        } else {\n            if (this.ac.createScriptProcessor) {\n                this.scriptNode = this.ac.createScriptProcessor(\n                    WebAudio.scriptBufferSize\n                );\n            } else {\n                this.scriptNode = this.ac.createJavaScriptNode(\n                    WebAudio.scriptBufferSize\n                );\n            }\n        }\n        this.scriptNode.connect(this.ac.destination);\n    }\n\n    /** @private */\n    addOnAudioProcess() {\n        this.scriptNode.onaudioprocess = () => {\n            const time = this.getCurrentTime();\n\n            if (time >= this.getDuration()) {\n                this.setState(FINISHED);\n                this.fireEvent('pause');\n            } else if (time >= this.scheduledPause) {\n                this.pause();\n            } else if (this.state === this.states[PLAYING]) {\n                this.fireEvent('audioprocess', time);\n            }\n        };\n    }\n\n    /** @private */\n    removeOnAudioProcess() {\n        this.scriptNode.onaudioprocess = null;\n    }\n    /** Create analyser node to perform audio analysis */\n    createAnalyserNode() {\n        this.analyser = this.ac.createAnalyser();\n        this.analyser.connect(this.gainNode);\n    }\n\n    /**\n     * Create the gain node needed to control the playback volume.\n     *\n     */\n    createVolumeNode() {\n        // Create gain node using the AudioContext\n        if (this.ac.createGain) {\n            this.gainNode = this.ac.createGain();\n        } else {\n            this.gainNode = this.ac.createGainNode();\n        }\n        // Add the gain node to the graph\n        this.gainNode.connect(this.ac.destination);\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            /**\n             * The webaudio API doesn't currently support setting the device\n             * output. Here we create an HTMLAudioElement, connect the\n             * webaudio stream to that element and setSinkId there.\n             */\n            if (!this.sinkAudioElement) {\n                this.sinkAudioElement = new window.Audio();\n                // autoplay is necessary since we're not invoking .play()\n                this.sinkAudioElement.autoplay = true;\n            }\n            if (!this.sinkAudioElement.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            if (!this.sinkStreamDestination) {\n                this.sinkStreamDestination = this.ac.createMediaStreamDestination();\n            }\n            this.gainNode.disconnect();\n            this.gainNode.connect(this.sinkStreamDestination);\n            this.sinkAudioElement.srcObject = this.sinkStreamDestination.stream;\n\n            return this.sinkAudioElement.setSinkId(deviceId);\n        } else {\n            return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n        }\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.gainNode.gain.value;\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete.\n     * @param {function} errback The function to call on error.\n     */\n    decodeArrayBuffer(arraybuffer, callback, errback) {\n        if (!this.offlineAc) {\n            this.offlineAc = this.getOfflineAudioContext(\n                this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100\n            );\n        }\n        if ('webkitAudioContext' in window) {\n            // Safari: no support for Promise-based decodeAudioData enabled\n            // Enable it in Safari using the Experimental Features > Modern WebAudio API option\n            this.offlineAc.decodeAudioData(\n                arraybuffer,\n                data => callback(data),\n                errback\n            );\n        } else {\n            this.offlineAc.decodeAudioData(arraybuffer).then(\n                (data) => callback(data)\n            ).catch(\n                (err) => errback(err)\n            );\n        }\n    }\n\n    /**\n     * Set pre-decoded peaks\n     *\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Explicit duration\n     */\n    setPeaks(peaks, duration) {\n        if (duration != null) {\n            this.explicitDuration = duration;\n        }\n        this.peaks = peaks;\n    }\n\n    /**\n     * Set the rendered length (different from the length of the audio)\n     *\n     * @param {number} length The rendered length\n     */\n    setLength(length) {\n        // No resize, we can preserve the cached peaks.\n        if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n            return;\n        }\n\n        this.splitPeaks = [];\n        this.mergedPeaks = [];\n        // Set the last element of the sparse array so the peak arrays are\n        // appropriately sized for other calculations.\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\n        let c;\n        for (c = 0; c < channels; c++) {\n            this.splitPeaks[c] = [];\n            this.splitPeaks[c][2 * (length - 1)] = 0;\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n        }\n        this.mergedPeaks[2 * (length - 1)] = 0;\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\n     * peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.peaks) {\n            return this.peaks;\n        }\n        if (!this.buffer) {\n            return [];\n        }\n\n        first = first || 0;\n        last = last || length - 1;\n\n        this.setLength(length);\n\n        if (!this.buffer) {\n            return this.params.splitChannels\n                ? this.splitPeaks\n                : this.mergedPeaks;\n        }\n\n        /**\n         * The following snippet fixes a buffering data issue on the Safari\n         * browser which returned undefined It creates the missing buffer based\n         * on 1 channel, 4096 samples and the sampleRate from the current\n         * webaudio context 4096 samples seemed to be the best fit for rendering\n         * will review this code once a stable version of Safari TP is out\n         */\n        if (!this.buffer.length) {\n            const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n            this.buffer = newBuffer.buffer;\n        }\n\n        const sampleSize = this.buffer.length / length;\n        const sampleStep = ~~(sampleSize / 10) || 1;\n        const channels = this.buffer.numberOfChannels;\n        let c;\n\n        for (c = 0; c < channels; c++) {\n            const peaks = this.splitPeaks[c];\n            const chan = this.buffer.getChannelData(c);\n            let i;\n\n            for (i = first; i <= last; i++) {\n                const start = ~~(i * sampleSize);\n                const end = ~~(start + sampleSize);\n                /**\n                 * Initialize the max and min to the first sample of this\n                 * subrange, so that even if the samples are entirely\n                 * on one side of zero, we still return the true max and\n                 * min values in the subrange.\n                 */\n                let min = chan[start];\n                let max = min;\n                let j;\n\n                for (j = start; j < end; j += sampleStep) {\n                    const value = chan[j];\n\n                    if (value > max) {\n                        max = value;\n                    }\n\n                    if (value < min) {\n                        min = value;\n                    }\n                }\n\n                peaks[2 * i] = max;\n                peaks[2 * i + 1] = min;\n\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                    this.mergedPeaks[2 * i] = max;\n                }\n\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                    this.mergedPeaks[2 * i + 1] = min;\n                }\n            }\n        }\n\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Position\n     */\n    getPlayedPercents() {\n        return this.state.getPlayedPercents.call(this);\n    }\n\n    /** @private */\n    disconnectSource() {\n        if (this.source) {\n            this.source.disconnect();\n        }\n    }\n    /**\n     * Destroy all references with WebAudio, disconnecting audio nodes and closing Audio Context\n     */\n    destroyWebAudio() {\n        this.disconnectFilters();\n        this.disconnectSource();\n        this.gainNode.disconnect();\n        this.scriptNode.disconnect();\n        this.analyser.disconnect();\n\n        // close the audioContext if closeAudioContext option is set to true\n        if (this.params.closeAudioContext) {\n            // check if browser supports AudioContext.close()\n            if (\n                typeof this.ac.close === 'function' &&\n                this.ac.state != 'closed'\n            ) {\n                this.ac.close();\n            }\n            // clear the reference to the audiocontext\n            this.ac = null;\n            // clear the actual audiocontext, either passed as param or the\n            // global singleton\n            if (!this.params.audioContext) {\n                window.WaveSurferAudioContext = null;\n            } else {\n                this.params.audioContext = null;\n            }\n            // clear the offlineAudioContext\n            window.WaveSurferOfflineAudioContext = null;\n        }\n\n        // disconnect resources used by setSinkId\n        if (this.sinkStreamDestination) {\n            this.sinkAudioElement.pause();\n            this.sinkAudioElement.srcObject = null;\n            this.sinkStreamDestination.disconnect();\n            this.sinkStreamDestination = null;\n        }\n    }\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        if (!this.isPaused()) {\n            this.pause();\n        }\n        this.unAll();\n        this.buffer = null;\n        this.destroyed = true;\n\n        this.destroyWebAudio();\n    }\n\n    /**\n     * Loaded a decoded audio buffer\n     *\n     * @param {Object} buffer Decoded audio buffer to load\n     */\n    load(buffer) {\n        this.startPosition = 0;\n        this.lastPlay = this.ac.currentTime;\n        this.buffer = buffer;\n        this.createSource();\n    }\n\n    /** @private */\n    createSource() {\n        this.disconnectSource();\n        this.source = this.ac.createBufferSource();\n\n        // adjust for old browsers\n        this.source.start = this.source.start || this.source.noteGrainOn;\n        this.source.stop = this.source.stop || this.source.noteOff;\n\n        this.setPlaybackRate(this.playbackRate);\n        this.source.buffer = this.buffer;\n        this.source.connect(this.analyser);\n    }\n\n    /**\n     * @private\n     *\n     * some browsers require an explicit call to #resume before they will play back audio\n     */\n    resumeAudioContext() {\n        if (this.ac.state == 'suspended') {\n            this.ac.resume && this.ac.resume();\n        }\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Whether or not this backend is currently paused\n     */\n    isPaused() {\n        return this.state !== this.states[PLAYING];\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration of loaded buffer\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        if (!this.buffer) {\n            return 0;\n        }\n        return this.buffer.duration;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     * @param {number} end Position to end at in seconds\n     * @return {{start: number, end: number}} Object containing start and end\n     * positions\n     */\n    seekTo(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        this.scheduledPause = null;\n\n        if (start == null) {\n            start = this.getCurrentTime();\n            if (start >= this.getDuration()) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.getDuration();\n        }\n\n        this.startPosition = start;\n        this.lastPlay = this.ac.currentTime;\n\n        if (this.state === this.states[FINISHED]) {\n            this.setState(PAUSED);\n        }\n\n        return {\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Get the playback position in seconds\n     *\n     * @return {number} The playback position in seconds\n     */\n    getPlayedTime() {\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop relative to the beginning of a clip.\n     */\n    play(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        // need to re-create source on each playback\n        this.createSource();\n\n        const adjustedTime = this.seekTo(start, end);\n\n        start = adjustedTime.start;\n        end = adjustedTime.end;\n\n        this.scheduledPause = end;\n\n        this.source.start(0, start);\n\n        this.resumeAudioContext();\n\n        this.setState(PLAYING);\n\n        this.fireEvent('play');\n    }\n\n    /**\n     * Pauses the loaded audio.\n     */\n    pause() {\n        this.scheduledPause = null;\n\n        this.startPosition += this.getPlayedTime();\n        try {\n            this.source && this.source.stop(0);\n        } catch (err) {\n            // Calling stop can throw the following 2 errors:\n            // - RangeError (The value specified for when is negative.)\n            // - InvalidStateNode (The node has not been started by calling start().)\n            // We can safely ignore both errors, because:\n            // - The range is surely correct\n            // - The node might not have been started yet, in which case we just want to carry on without causing any trouble.\n        }\n\n        this.setState(PAUSED);\n\n        this.fireEvent('pause');\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} The current time in seconds\n     */\n    getCurrentTime() {\n        return this.state.getCurrentTime.call(this);\n    }\n\n    /**\n     * Returns the current playback rate. (0=no playback, 1=normal playback)\n     *\n     * @return {number} The current playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value The playback rate to use\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.source && this.source.playbackRate.setValueAtTime(\n            this.playbackRate,\n            this.ac.currentTime\n        );\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} end Position to end at\n     * @version 3.3.0\n     */\n    setPlayEnd(end) {\n        this.scheduledPause = end;\n    }\n}\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/wavesurfer.js\");\n",""],"names":["CanvasEntry","wave","waveCtx","progress","progressCtx","start","end","id","getId","constructor","name","toLowerCase","canvasContextAttributes","element","getContext","elementWidth","totalWidth","width","height","offsetLeft","elementSize","style","hasProgressCanvas","clearRect","canvas","waveColor","progressColor","fillStyle","getFillStyle","ctx","color","CanvasGradient","waveGradient","createLinearGradient","forEach","value","index","addColorStop","length","vertical","setTransform","x","y","radius","fillRectToContext","drawRoundedRect","fillRect","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","peaks","absmax","halfH","offsetY","drawLineToContext","first","Math","round","last","canvasStart","canvasEnd","scale","halfOffset","absmaxHalf","i","peak","h","halfPixel","j","format","quality","type","Promise","resolve","toBlob","toDataURL","Drawer","container","params","util","withOrientation","pixelRatio","lastPos","wrapper","el","styles","appendChild","document","createElement","display","position","userSelect","webkitUserSelect","fillParent","scrollParent","cursor","hideCursor","overflowX","hideScrollbar","overflowY","setupWrapperEvents","e","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","nominalWidth","parentWidth","getWidth","progressPixels","getProgressPixels","scrollLeft","scrollWidth","clamp","wrapperBbox","rtl","right","left","addEventListener","orientedEvent","scrollbarHeight","offsetHeight","clientHeight","clientY","bottom","interact","fireEvent","handleEvent","setWidth","clearWave","barWidth","drawBars","drawWave","percent","recenterOnPosition","immediate","half","clientWidth","maxScroll","target","offset","rate","autoCenterRate","max","min","newWidth","updateSize","minPxDelta","pos","autoCenter","newPos","autoCenterImmediately","updateProgress","unAll","parentNode","domElement","removeChild","channelIndex","Observer","MultiCanvas","maxCanvasWidth","maxCanvasElementWidth","canvases","progressWave","EntryClass","drawingContextAttributes","overlap","ceil","barRadius","createWrapper","createElements","zIndex","top","overflow","boxSizing","borderRightStyle","pointerEvents","addCanvas","updateCursor","borderRightWidth","cursorWidth","borderRightColor","cursorColor","requiredCanvases","removeCanvas","canvasWidth","lastCanvas","entry","updateDimensions","leftOffset","initWave","initProgress","push","lastEntry","parentElement","destroy","pop","frame","prepareDraw","hasMinVals","ch","undefined","peakIndexScale","bar","gap","barGap","step","peakIndex","peakIndexRange","floor","peakIndexEnd","newPeak","abs","barMinHeight","reflectedPeaks","len","drawLine","splitChannelsOptions","channelColors","setFillStyles","applyCanvasTransforms","drawLines","startCanvas","endCanvas","intersection","x1","y1","x2","y2","fillRects","splitChannels","filterChannels","includes","fn","drawIndex","normalizedMax","Array","channels","filteredChannels","filter","c","hideChannel","overlay","setHeight","overallAbsMax","relativeNormalization","map","channelPeaks","absMax","indexOf","barHeight","normalize","some","call","val","all","getImage","images","MediaElementWebAudio","sourceMediaElement","setPlaybackRate","audioRate","createTimer","createVolumeNode","createScriptNode","createAnalyserNode","media","preload","createMediaElementSource","mediaElement","ac","connect","analyser","resumeAudioContext","destroyWebAudio","MediaElement","currentTime","duration","paused","playbackRate","play","pause","volume","mediaType","elementPosition","isMuted","buffer","onPlayEnd","mediaListeners","error","canplay","ended","seeked","event","volumechange","muted","Object","keys","removeEventListener","onAudioProcess","isPaused","getCurrentTime","on","url","controls","mediaControls","autoplay","src","prevMedia","querySelector","_load","elt","HTMLMediaElement","Error","load","_setupMediaListeners","setVolume","explicitDuration","Infinity","seekable","getDuration","isNaN","clearPlayEnd","seekTo","promise","setPlayEnd","_onPlayEnd","time","un","deviceId","setSinkId","reject","destroyed","removeMediaElementOnDestroy","WebAudio","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","uncachedRanges","item","arr","concat","sort","a","b","uncachedRangePairs","peakCacheRangePairs","values","utilMax","utilmin","ProgressHandler","instance","contentLength","response","_reader","body","getReader","total","parseInt","loaded","controller","read","then","done","onProgress","lengthComputable","close","byteLength","enqueue","catch","fetchFile","options","fetchHeaders","Headers","fetchRequest","Request","AbortController","requestHeaders","header","append","key","responseType","fetchOptions","method","headers","mode","credentials","cache","redirect","referrer","signal","fetch","progressAvailable","get","Response","ReadableStream","errMsg","ok","arrayBuffer","json","blob","text","status","func","args","reqAnimationFrame","prefix","random","toString","substring","largest","smallest","Number","_disabledEventEmissions","handlers","callback","splice","handler","apply","setTimeout","eventNames","_isDisabledEventEmission","verticalPropMap","offsetTop","offsetWidth","mapProp","prop","prototype","hasOwnProperty","isProxy","Symbol","Proxy","obj","receiver","bind","set","preventClickHandler","stopPropagation","preventClick","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","ignoreSilenceMode","audioData","tmp","innerHTML","audioSilentMode","children","disableRemotePlayback","remove","PluginClass","ws","WaveSurfer","audioContext","audioScriptProcessor","backend","backgroundColor","dragSelection","desynchronized","forceDecode","loopSelection","mediaContainer","minPxPerSec","partialRender","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","renderer","responsive","skipLength","splitDragSelection","xhr","assign","defaultParams","transform","setBackgroundColor","savedVolume","tmpEvents","currentRequest","arraybuffer","drawer","peakCache","supportsWebAudio","Backend","backends","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","debounce","registerPlugins","createDrawer","createBackend","createPeakCache","plugin","addPlugin","deferInit","initPlugin","staticProps","pluginStaticProp","Instance","observerPrototypeKeys","getOwnPropertyNames","destroyPlugin","init","drawBuffer","getPlayedPercents","newVolume","getVolume","seconds","skip","seekAndCenter","recenter","isFinite","isWebAudioBackend","oldScrollParent","getPlaybackRate","setMute","mute","filters","channelIdx","background","channelIndices","newRanges","addRangeToPeakCache","getPeaks","drawPeaks","pxPerSec","decodeArrayBuffer","data","loadDecodedBuffer","reader","FileReader","loadArrayBuffer","result","readAsArrayBuffer","empty","preloadIgnoreReasons","activeReasons","reason","console","warn","join","loadBuffer","loadMediaElement","action","once","getArrayBuffer","setPeaks","urlOrElt","loadElt","err","request","percentComplete","accuracy","noWindow","blobJSON","Blob","JSON","stringify","objURL","URL","createObjectURL","open","revokeObjectURL","cancel","abort","stop","disconnectSource","cancelAjax","clearTmpEvents","destroyAllPlugins","wavesurfer","__VERSION__","PLAYING","PAUSED","FINISHED","addOnAudioProcess","startPosition","getPlayedTime","removeOnAudioProcess","getAudioContext","lastPlay","scheduledPause","states","create","stateBehaviors","gainNode","mergedPeaks","offlineAc","scriptNode","source","splitPeaks","state","sinkStreamDestination","sinkAudioElement","AudioContext","webkitAudioContext","WaveSurferAudioContext","sampleRate","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","setState","setLength","disconnect","setFilters","disconnectFilters","reduce","prev","curr","createScriptProcessor","scriptBufferSize","createJavaScriptNode","destination","onaudioprocess","createAnalyser","createGain","createGainNode","Audio","createMediaStreamDestination","srcObject","stream","gain","setValueAtTime","errback","getOfflineAudioContext","decodeAudioData","numberOfChannels","newBuffer","createBuffer","sampleSize","sampleStep","chan","getChannelData","closeAudioContext","createSource","createBufferSource","noteGrainOn","noteOff","resume","adjustedTime"],"sourceRoot":""}