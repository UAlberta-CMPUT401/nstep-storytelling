---
test_name: Endpoints _ 1. Add New User

includes:
  - !include includes.yaml

strict:
  - json:off

stages:
  - name: Add new user

    request:
      url: http://{host:s}:{port:d}/api/user
      follow_redirects: true
      method: POST
      json:
        name: "New user"

    response:
      status_code: [200, 201]
      save:
        json:
          user_id: id


  - name: Delete the user

    request:
      url: http://{host:s}:{port:d}/api/user/{user_id}
      follow_redirects: true
      method: DELETE
      timeout: 1.0

    response:
      status_code: [200, 201]
      json:
        status: 0
        message: "User deleted"

---
test_name: Endpoints _ 2. Fetch New User

includes:
  - !include includes.yaml

strict:
  - json:off

stages:
  - name: Add new User

    request:
      url: http://{host:s}:{port:d}/api/user
      follow_redirects: true
      method: POST
      json:
        name: "New user"

    response:
      status_code: [200, 201]
      save:
        json:
          user_id: id

  - name: Fetch new user

    request:
      url: http://{host:s}:{port:d}/api/user/{user_id}
      follow_redirects: true
      method: GET
      timeout: 1.0

    response:
      status_code: 200
      json:
        name: "New user"

  - name: Delete the user

    request:
      url: http://{host:s}:{port:d}/api/user/{user_id}
      follow_redirects: true
      method: DELETE
      timeout: 1.0

    response:
      status_code: [200, 201]
      json:
        status: 0
        message: "User deleted"

---
test_name: Endpoints _ 4. Update user

includes:
  - !include includes.yaml

strict:
  - json:off

stages:
  - name: Add new user

    request:
      url: http://{host:s}:{port:d}/api/user
      follow_redirects: true
      method: POST
      json:
        name: "Test user"

    response:
      status_code: [200, 201]
      save:
        json:
          user_id: id

  - name: Update user

    request:
      url: http://{host:s}:{port:d}/api/user/{user_id}
      follow_redirects: true
      method: PUT
      json:
        name: "Updated test user"
      timeout: 1.0

    response:
      status_code: [200, 201]
      json:
        status: 0
        message: "User updated"

  - name: Retrieve the updated user

    request:
      url: http://{host:s}:{port:d}/api/user/{user_id}
      follow_redirects: true
      method: GET
      timeout: 1.0

    response:
      status_code: 200
      json:
        name: "Updated test user"

  - name: Delete the user

    request:
      url: http://{host:s}:{port:d}/api/user/{user_id}
      follow_redirects: true
      method: DELETE
      timeout: 1.0

    response:
      status_code: [200, 201]
      json:
        status: 0
        message: "User deleted"

---
test_name: Endpoints _ 5. Modify user

includes:
  - !include includes.yaml

strict:
  - json:off

stages:
  - name: Add new user

    request:
      url: http://{host:s}:{port:d}/api/user
      follow_redirects: true
      method: POST
      json:
        name: "Test user"

    response:
      status_code: [200, 201]
      save:
        json:
          user_id: id

  - name: Modify user

    request:
      url: http://{host:s}:{port:d}/api/user/{user_id}
      follow_redirects: true
      method: PATCH
      json:
        name: "Modified user name"
      timeout: 1.0

    response:
      status_code: [200, 201]
      json:
        status: 0
        message: "User modified"

  - name: Retrieve the modified user

    request:
      url: http://{host:s}:{port:d}/api/user/{user_id}
      follow_redirects: true
      method: GET
      timeout: 1.0

    response:
      status_code: 200
      json:
        name: "Modified user name"


  - name: Delete the user

    request:
      url: http://{host:s}:{port:d}/api/user/{user_id}
      follow_redirects: true
      method: DELETE
      timeout: 1.0

    response:
      status_code: [200, 201]
      json:
        status: 0
        message: "User deleted"

---
test_name: Endpoints _ 6. Delete user

includes:
  - !include includes.yaml

strict:
  - json:off

stages:
  - name: Add new user

    request:
      url: http://{host:s}:{port:d}/api/user
      follow_redirects: true
      method: POST
      json:
        name: "Test user"

    response:
      status_code: [200, 201]
      save:
        json:
          user_id: id

  - name: Delete the user

    request:
      url: http://{host:s}:{port:d}/api/user/{user_id}
      follow_redirects: true
      method: DELETE
      timeout: 1.0

    response:
      status_code: [200, 201]
      json:
        status: 0
        message: "User deleted"

  - name: Retrieve the deleted user

    request:
      url: http://{host:s}:{port:d}/api/user/{user_id}
      follow_redirects: true
      method: GET
      timeout: 1.0

    response:
      status_code: [404]